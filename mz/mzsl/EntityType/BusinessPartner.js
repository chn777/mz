var BPAddress = require('ComplexType/BPAddress')
var BPAddressCollection = require('ComplexType/BPAddressCollection')
var ContactEmployee = require('ComplexType/ContactEmployee')
var ContactEmployeeCollection = require('ComplexType/ContactEmployeeCollection')
var BPAccountReceivablePayble = require('ComplexType/BPAccountReceivablePayble')
var BPAccountReceivablePaybleCollection = require('ComplexType/BPAccountReceivablePaybleCollection')
var BPPaymentMethod = require('ComplexType/BPPaymentMethod')
var BPPaymentMethodCollection = require('ComplexType/BPPaymentMethodCollection')
var BPWithholdingTax = require('ComplexType/BPWithholdingTax')
var BPWithholdingTaxCollection = require('ComplexType/BPWithholdingTaxCollection')
var BPPaymentDate = require('ComplexType/BPPaymentDate')
var BPPaymentDateCollection = require('ComplexType/BPPaymentDateCollection')
var BPBranchAssignmentItem = require('ComplexType/BPBranchAssignmentItem')
var BPBranchAssignmentItemCollection = require('ComplexType/BPBranchAssignmentItemCollection')
var BPBankAccount = require('ComplexType/BPBankAccount')
var BPBankAccountCollection = require('ComplexType/BPBankAccountCollection')
var BPFiscalTaxID = require('ComplexType/BPFiscalTaxID')
var BPFiscalTaxIDCollection = require('ComplexType/BPFiscalTaxIDCollection')
var DiscountGroup = require('ComplexType/DiscountGroup')
var DiscountGroupCollection = require('ComplexType/DiscountGroupCollection')
var BPIntrastatExtension = require('ComplexType/BPIntrastatExtension')
var BPBlockSendingMarketingContent = require('ComplexType/BPBlockSendingMarketingContent')
var BPBlockSendingMarketingContentCollection = require('ComplexType/BPBlockSendingMarketingContentCollection')

var BoCardTypes = require('EnumType/BoCardTypes')
var BoVatStatus = require('EnumType/BoVatStatus')
var BoYesNoEnum = require('EnumType/BoYesNoEnum')
var BoFatherCardTypes = require('EnumType/BoFatherCardTypes')
var BoCardCompanyTypes = require('EnumType/BoCardCompanyTypes')
var BoTaxRoundingRuleTypes = require('EnumType/BoTaxRoundingRuleTypes')
var DiscountGroupBaseObjectEnum = require('EnumType/DiscountGroupBaseObjectEnum')
var DiscountGroupRelationsEnum = require('EnumType/DiscountGroupRelationsEnum')
var AssesseeTypeEnum = require('EnumType/AssesseeTypeEnum')
var OperationCode347Enum = require('EnumType/OperationCode347Enum')
var ShaamGroupEnum = require('EnumType/ShaamGroupEnum')
var AutomaticPostingEnum = require('EnumType/AutomaticPostingEnum')
var EffectivePriceEnum = require('EnumType/EffectivePriceEnum')
var ResidenceNumberTypeEnum = require('EnumType/ResidenceNumberTypeEnum')
var TypeOfOperationEnum = require('EnumType/TypeOfOperationEnum')
var PriceModeEnum = require('EnumType/PriceModeEnum')
var EDocGenerationTypeEnum = require('EnumType/EDocGenerationTypeEnum')
var ExemptionMaxAmountValidationTypeEnum = require('EnumType/ExemptionMaxAmountValidationTypeEnum')

var ServiceLayerModule = require('Base/ServiceLayerModule.js');

//workaround the possible intellisense bug of VS
if (typeof (SAPB1) === "undefined") {
    SAPB1 = {};
}

SAPB1.BusinessPartner = function () {
}
SAPB1.BusinessPartner.prototype = new SAPB1.EntityType();
SAPB1.BusinessPartner.prototype.constructor = SAPB1.BusinessPartner;
SAPB1.BusinessPartner.prototype.keys.push('CardCode');
SAPB1.BusinessPartner.CardCode = { valueOf: function(){return 'CardCode';}, Type: 'Edm.String', Index: 0, Nullable: false, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CardName = { valueOf: function(){return 'CardName';}, Type: 'Edm.String', Index: 1, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CardType = { valueOf: function(){return 'CardType';}, Type: 'BoCardTypes', Index: 2, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.GroupCode = { valueOf: function(){return 'GroupCode';}, Type: 'Edm.Int32', Index: 3, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Address = { valueOf: function(){return 'Address';}, Type: 'Edm.String', Index: 4, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ZipCode = { valueOf: function(){return 'ZipCode';}, Type: 'Edm.String', Index: 5, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.MailAddress = { valueOf: function(){return 'MailAddress';}, Type: 'Edm.String', Index: 6, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.MailZipCode = { valueOf: function(){return 'MailZipCode';}, Type: 'Edm.String', Index: 7, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Phone1 = { valueOf: function(){return 'Phone1';}, Type: 'Edm.String', Index: 8, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Phone2 = { valueOf: function(){return 'Phone2';}, Type: 'Edm.String', Index: 9, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Fax = { valueOf: function(){return 'Fax';}, Type: 'Edm.String', Index: 10, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ContactPerson = { valueOf: function(){return 'ContactPerson';}, Type: 'Edm.String', Index: 11, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Notes = { valueOf: function(){return 'Notes';}, Type: 'Edm.String', Index: 12, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.PayTermsGrpCode = { valueOf: function(){return 'PayTermsGrpCode';}, Type: 'Edm.Int32', Index: 13, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CreditLimit = { valueOf: function(){return 'CreditLimit';}, Type: 'Edm.Double', Index: 14, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.MaxCommitment = { valueOf: function(){return 'MaxCommitment';}, Type: 'Edm.Double', Index: 15, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DiscountPercent = { valueOf: function(){return 'DiscountPercent';}, Type: 'Edm.Double', Index: 16, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.VatLiable = { valueOf: function(){return 'VatLiable';}, Type: 'BoVatStatus', Index: 17, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.FederalTaxID = { valueOf: function(){return 'FederalTaxID';}, Type: 'Edm.String', Index: 18, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DeductibleAtSource = { valueOf: function(){return 'DeductibleAtSource';}, Type: 'BoYesNoEnum', Index: 19, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DeductionPercent = { valueOf: function(){return 'DeductionPercent';}, Type: 'Edm.Double', Index: 20, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DeductionValidUntil = { valueOf: function(){return 'DeductionValidUntil';}, Type: 'Edm.DateTime', Index: 21, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.PriceListNum = { valueOf: function(){return 'PriceListNum';}, Type: 'Edm.Int32', Index: 22, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.IntrestRatePercent = { valueOf: function(){return 'IntrestRatePercent';}, Type: 'Edm.Double', Index: 23, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CommissionPercent = { valueOf: function(){return 'CommissionPercent';}, Type: 'Edm.Double', Index: 24, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CommissionGroupCode = { valueOf: function(){return 'CommissionGroupCode';}, Type: 'Edm.Int32', Index: 25, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.FreeText = { valueOf: function(){return 'FreeText';}, Type: 'Edm.String', Index: 26, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.SalesPersonCode = { valueOf: function(){return 'SalesPersonCode';}, Type: 'Edm.Int32', Index: 27, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Currency = { valueOf: function(){return 'Currency';}, Type: 'Edm.String', Index: 28, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.RateDiffAccount = { valueOf: function(){return 'RateDiffAccount';}, Type: 'Edm.String', Index: 29, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Cellular = { valueOf: function(){return 'Cellular';}, Type: 'Edm.String', Index: 30, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.AvarageLate = { valueOf: function(){return 'AvarageLate';}, Type: 'Edm.Int32', Index: 31, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.City = { valueOf: function(){return 'City';}, Type: 'Edm.String', Index: 32, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.County = { valueOf: function(){return 'County';}, Type: 'Edm.String', Index: 33, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Country = { valueOf: function(){return 'Country';}, Type: 'Edm.String', Index: 34, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.MailCity = { valueOf: function(){return 'MailCity';}, Type: 'Edm.String', Index: 35, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.MailCounty = { valueOf: function(){return 'MailCounty';}, Type: 'Edm.String', Index: 36, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.MailCountry = { valueOf: function(){return 'MailCountry';}, Type: 'Edm.String', Index: 37, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EmailAddress = { valueOf: function(){return 'EmailAddress';}, Type: 'Edm.String', Index: 38, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Picture = { valueOf: function(){return 'Picture';}, Type: 'Edm.String', Index: 39, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DefaultAccount = { valueOf: function(){return 'DefaultAccount';}, Type: 'Edm.String', Index: 40, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DefaultBranch = { valueOf: function(){return 'DefaultBranch';}, Type: 'Edm.String', Index: 41, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DefaultBankCode = { valueOf: function(){return 'DefaultBankCode';}, Type: 'Edm.String', Index: 42, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.AdditionalID = { valueOf: function(){return 'AdditionalID';}, Type: 'Edm.String', Index: 43, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Pager = { valueOf: function(){return 'Pager';}, Type: 'Edm.String', Index: 44, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.FatherCard = { valueOf: function(){return 'FatherCard';}, Type: 'Edm.String', Index: 45, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CardForeignName = { valueOf: function(){return 'CardForeignName';}, Type: 'Edm.String', Index: 46, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.FatherType = { valueOf: function(){return 'FatherType';}, Type: 'BoFatherCardTypes', Index: 47, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DeductionOffice = { valueOf: function(){return 'DeductionOffice';}, Type: 'Edm.String', Index: 48, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ExportCode = { valueOf: function(){return 'ExportCode';}, Type: 'Edm.String', Index: 49, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.MinIntrest = { valueOf: function(){return 'MinIntrest';}, Type: 'Edm.Double', Index: 50, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CurrentAccountBalance = { valueOf: function(){return 'CurrentAccountBalance';}, Type: 'Edm.Double', Index: 51, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.OpenDeliveryNotesBalance = { valueOf: function(){return 'OpenDeliveryNotesBalance';}, Type: 'Edm.Double', Index: 52, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.OpenOrdersBalance = { valueOf: function(){return 'OpenOrdersBalance';}, Type: 'Edm.Double', Index: 53, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.VatGroup = { valueOf: function(){return 'VatGroup';}, Type: 'Edm.String', Index: 54, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ShippingType = { valueOf: function(){return 'ShippingType';}, Type: 'Edm.Int32', Index: 55, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Password = { valueOf: function(){return 'Password';}, Type: 'Edm.String', Index: 56, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Indicator = { valueOf: function(){return 'Indicator';}, Type: 'Edm.String', Index: 57, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.IBAN = { valueOf: function(){return 'IBAN';}, Type: 'Edm.String', Index: 58, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CreditCardCode = { valueOf: function(){return 'CreditCardCode';}, Type: 'Edm.Int32', Index: 59, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CreditCardNum = { valueOf: function(){return 'CreditCardNum';}, Type: 'Edm.String', Index: 60, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CreditCardExpiration = { valueOf: function(){return 'CreditCardExpiration';}, Type: 'Edm.DateTime', Index: 61, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DebitorAccount = { valueOf: function(){return 'DebitorAccount';}, Type: 'Edm.String', Index: 62, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.OpenOpportunities = { valueOf: function(){return 'OpenOpportunities';}, Type: 'Edm.Int32', Index: 63, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Valid = { valueOf: function(){return 'Valid';}, Type: 'BoYesNoEnum', Index: 64, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ValidFrom = { valueOf: function(){return 'ValidFrom';}, Type: 'Edm.DateTime', Index: 65, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ValidTo = { valueOf: function(){return 'ValidTo';}, Type: 'Edm.DateTime', Index: 66, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ValidRemarks = { valueOf: function(){return 'ValidRemarks';}, Type: 'Edm.String', Index: 67, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Frozen = { valueOf: function(){return 'Frozen';}, Type: 'BoYesNoEnum', Index: 68, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.FrozenFrom = { valueOf: function(){return 'FrozenFrom';}, Type: 'Edm.DateTime', Index: 69, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.FrozenTo = { valueOf: function(){return 'FrozenTo';}, Type: 'Edm.DateTime', Index: 70, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.FrozenRemarks = { valueOf: function(){return 'FrozenRemarks';}, Type: 'Edm.String', Index: 71, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Block = { valueOf: function(){return 'Block';}, Type: 'Edm.String', Index: 72, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BillToState = { valueOf: function(){return 'BillToState';}, Type: 'Edm.String', Index: 73, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ExemptNum = { valueOf: function(){return 'ExemptNum';}, Type: 'Edm.String', Index: 74, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Priority = { valueOf: function(){return 'Priority';}, Type: 'Edm.Int32', Index: 75, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.FormCode1099 = { valueOf: function(){return 'FormCode1099';}, Type: 'Edm.Int32', Index: 76, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Box1099 = { valueOf: function(){return 'Box1099';}, Type: 'Edm.String', Index: 77, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.PeymentMethodCode = { valueOf: function(){return 'PeymentMethodCode';}, Type: 'Edm.String', Index: 78, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BackOrder = { valueOf: function(){return 'BackOrder';}, Type: 'BoYesNoEnum', Index: 79, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.PartialDelivery = { valueOf: function(){return 'PartialDelivery';}, Type: 'BoYesNoEnum', Index: 80, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BlockDunning = { valueOf: function(){return 'BlockDunning';}, Type: 'BoYesNoEnum', Index: 81, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BankCountry = { valueOf: function(){return 'BankCountry';}, Type: 'Edm.String', Index: 82, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.HouseBank = { valueOf: function(){return 'HouseBank';}, Type: 'Edm.String', Index: 83, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.HouseBankCountry = { valueOf: function(){return 'HouseBankCountry';}, Type: 'Edm.String', Index: 84, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.HouseBankAccount = { valueOf: function(){return 'HouseBankAccount';}, Type: 'Edm.String', Index: 85, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ShipToDefault = { valueOf: function(){return 'ShipToDefault';}, Type: 'Edm.String', Index: 86, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DunningLevel = { valueOf: function(){return 'DunningLevel';}, Type: 'Edm.Int32', Index: 87, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DunningDate = { valueOf: function(){return 'DunningDate';}, Type: 'Edm.DateTime', Index: 88, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CollectionAuthorization = { valueOf: function(){return 'CollectionAuthorization';}, Type: 'BoYesNoEnum', Index: 89, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DME = { valueOf: function(){return 'DME';}, Type: 'Edm.String', Index: 90, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.InstructionKey = { valueOf: function(){return 'InstructionKey';}, Type: 'Edm.String', Index: 91, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.SinglePayment = { valueOf: function(){return 'SinglePayment';}, Type: 'BoYesNoEnum', Index: 92, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ISRBillerID = { valueOf: function(){return 'ISRBillerID';}, Type: 'Edm.String', Index: 93, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.PaymentBlock = { valueOf: function(){return 'PaymentBlock';}, Type: 'BoYesNoEnum', Index: 94, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ReferenceDetails = { valueOf: function(){return 'ReferenceDetails';}, Type: 'Edm.String', Index: 95, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.HouseBankBranch = { valueOf: function(){return 'HouseBankBranch';}, Type: 'Edm.String', Index: 96, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.OwnerIDNumber = { valueOf: function(){return 'OwnerIDNumber';}, Type: 'Edm.String', Index: 97, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.PaymentBlockDescription = { valueOf: function(){return 'PaymentBlockDescription';}, Type: 'Edm.Int32', Index: 98, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.TaxExemptionLetterNum = { valueOf: function(){return 'TaxExemptionLetterNum';}, Type: 'Edm.String', Index: 99, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.MaxAmountOfExemption = { valueOf: function(){return 'MaxAmountOfExemption';}, Type: 'Edm.Double', Index: 100, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ExemptionValidityDateFrom = { valueOf: function(){return 'ExemptionValidityDateFrom';}, Type: 'Edm.DateTime', Index: 101, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ExemptionValidityDateTo = { valueOf: function(){return 'ExemptionValidityDateTo';}, Type: 'Edm.DateTime', Index: 102, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.LinkedBusinessPartner = { valueOf: function(){return 'LinkedBusinessPartner';}, Type: 'Edm.String', Index: 103, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.LastMultiReconciliationNum = { valueOf: function(){return 'LastMultiReconciliationNum';}, Type: 'Edm.Int32', Index: 104, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DeferredTax = { valueOf: function(){return 'DeferredTax';}, Type: 'BoYesNoEnum', Index: 105, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Equalization = { valueOf: function(){return 'Equalization';}, Type: 'BoYesNoEnum', Index: 106, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.SubjectToWithholdingTax = { valueOf: function(){return 'SubjectToWithholdingTax';}, Type: 'BoYesNoEnum', Index: 107, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CertificateNumber = { valueOf: function(){return 'CertificateNumber';}, Type: 'Edm.String', Index: 108, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ExpirationDate = { valueOf: function(){return 'ExpirationDate';}, Type: 'Edm.DateTime', Index: 109, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.NationalInsuranceNum = { valueOf: function(){return 'NationalInsuranceNum';}, Type: 'Edm.String', Index: 110, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.AccrualCriteria = { valueOf: function(){return 'AccrualCriteria';}, Type: 'BoYesNoEnum', Index: 111, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.WTCode = { valueOf: function(){return 'WTCode';}, Type: 'Edm.String', Index: 112, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BillToBuildingFloorRoom = { valueOf: function(){return 'BillToBuildingFloorRoom';}, Type: 'Edm.String', Index: 113, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DownPaymentClearAct = { valueOf: function(){return 'DownPaymentClearAct';}, Type: 'Edm.String', Index: 114, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ChannelBP = { valueOf: function(){return 'ChannelBP';}, Type: 'Edm.String', Index: 115, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DefaultTechnician = { valueOf: function(){return 'DefaultTechnician';}, Type: 'Edm.Int32', Index: 116, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BilltoDefault = { valueOf: function(){return 'BilltoDefault';}, Type: 'Edm.String', Index: 117, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CustomerBillofExchangDisc = { valueOf: function(){return 'CustomerBillofExchangDisc';}, Type: 'Edm.String', Index: 118, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Territory = { valueOf: function(){return 'Territory';}, Type: 'Edm.Int32', Index: 119, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ShipToBuildingFloorRoom = { valueOf: function(){return 'ShipToBuildingFloorRoom';}, Type: 'Edm.String', Index: 120, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CustomerBillofExchangPres = { valueOf: function(){return 'CustomerBillofExchangPres';}, Type: 'Edm.String', Index: 121, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ProjectCode = { valueOf: function(){return 'ProjectCode';}, Type: 'Edm.String', Index: 122, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.VatGroupLatinAmerica = { valueOf: function(){return 'VatGroupLatinAmerica';}, Type: 'Edm.String', Index: 123, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DunningTerm = { valueOf: function(){return 'DunningTerm';}, Type: 'Edm.String', Index: 124, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Website = { valueOf: function(){return 'Website';}, Type: 'Edm.String', Index: 125, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.OtherReceivablePayable = { valueOf: function(){return 'OtherReceivablePayable';}, Type: 'Edm.String', Index: 126, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BillofExchangeonCollection = { valueOf: function(){return 'BillofExchangeonCollection';}, Type: 'Edm.String', Index: 127, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CompanyPrivate = { valueOf: function(){return 'CompanyPrivate';}, Type: 'BoCardCompanyTypes', Index: 128, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.LanguageCode = { valueOf: function(){return 'LanguageCode';}, Type: 'Edm.Int32', Index: 129, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.UnpaidBillofExchange = { valueOf: function(){return 'UnpaidBillofExchange';}, Type: 'Edm.String', Index: 130, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.WithholdingTaxDeductionGroup = { valueOf: function(){return 'WithholdingTaxDeductionGroup';}, Type: 'Edm.Int32', Index: 131, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ClosingDateProcedureNumber = { valueOf: function(){return 'ClosingDateProcedureNumber';}, Type: 'Edm.Int32', Index: 132, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Profession = { valueOf: function(){return 'Profession';}, Type: 'Edm.String', Index: 133, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BankChargesAllocationCode = { valueOf: function(){return 'BankChargesAllocationCode';}, Type: 'Edm.String', Index: 134, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.TaxRoundingRule = { valueOf: function(){return 'TaxRoundingRule';}, Type: 'BoTaxRoundingRuleTypes', Index: 135, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties1 = { valueOf: function(){return 'Properties1';}, Type: 'BoYesNoEnum', Index: 136, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties2 = { valueOf: function(){return 'Properties2';}, Type: 'BoYesNoEnum', Index: 137, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties3 = { valueOf: function(){return 'Properties3';}, Type: 'BoYesNoEnum', Index: 138, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties4 = { valueOf: function(){return 'Properties4';}, Type: 'BoYesNoEnum', Index: 139, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties5 = { valueOf: function(){return 'Properties5';}, Type: 'BoYesNoEnum', Index: 140, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties6 = { valueOf: function(){return 'Properties6';}, Type: 'BoYesNoEnum', Index: 141, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties7 = { valueOf: function(){return 'Properties7';}, Type: 'BoYesNoEnum', Index: 142, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties8 = { valueOf: function(){return 'Properties8';}, Type: 'BoYesNoEnum', Index: 143, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties9 = { valueOf: function(){return 'Properties9';}, Type: 'BoYesNoEnum', Index: 144, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties10 = { valueOf: function(){return 'Properties10';}, Type: 'BoYesNoEnum', Index: 145, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties11 = { valueOf: function(){return 'Properties11';}, Type: 'BoYesNoEnum', Index: 146, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties12 = { valueOf: function(){return 'Properties12';}, Type: 'BoYesNoEnum', Index: 147, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties13 = { valueOf: function(){return 'Properties13';}, Type: 'BoYesNoEnum', Index: 148, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties14 = { valueOf: function(){return 'Properties14';}, Type: 'BoYesNoEnum', Index: 149, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties15 = { valueOf: function(){return 'Properties15';}, Type: 'BoYesNoEnum', Index: 150, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties16 = { valueOf: function(){return 'Properties16';}, Type: 'BoYesNoEnum', Index: 151, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties17 = { valueOf: function(){return 'Properties17';}, Type: 'BoYesNoEnum', Index: 152, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties18 = { valueOf: function(){return 'Properties18';}, Type: 'BoYesNoEnum', Index: 153, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties19 = { valueOf: function(){return 'Properties19';}, Type: 'BoYesNoEnum', Index: 154, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties20 = { valueOf: function(){return 'Properties20';}, Type: 'BoYesNoEnum', Index: 155, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties21 = { valueOf: function(){return 'Properties21';}, Type: 'BoYesNoEnum', Index: 156, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties22 = { valueOf: function(){return 'Properties22';}, Type: 'BoYesNoEnum', Index: 157, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties23 = { valueOf: function(){return 'Properties23';}, Type: 'BoYesNoEnum', Index: 158, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties24 = { valueOf: function(){return 'Properties24';}, Type: 'BoYesNoEnum', Index: 159, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties25 = { valueOf: function(){return 'Properties25';}, Type: 'BoYesNoEnum', Index: 160, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties26 = { valueOf: function(){return 'Properties26';}, Type: 'BoYesNoEnum', Index: 161, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties27 = { valueOf: function(){return 'Properties27';}, Type: 'BoYesNoEnum', Index: 162, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties28 = { valueOf: function(){return 'Properties28';}, Type: 'BoYesNoEnum', Index: 163, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties29 = { valueOf: function(){return 'Properties29';}, Type: 'BoYesNoEnum', Index: 164, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties30 = { valueOf: function(){return 'Properties30';}, Type: 'BoYesNoEnum', Index: 165, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties31 = { valueOf: function(){return 'Properties31';}, Type: 'BoYesNoEnum', Index: 166, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties32 = { valueOf: function(){return 'Properties32';}, Type: 'BoYesNoEnum', Index: 167, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties33 = { valueOf: function(){return 'Properties33';}, Type: 'BoYesNoEnum', Index: 168, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties34 = { valueOf: function(){return 'Properties34';}, Type: 'BoYesNoEnum', Index: 169, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties35 = { valueOf: function(){return 'Properties35';}, Type: 'BoYesNoEnum', Index: 170, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties36 = { valueOf: function(){return 'Properties36';}, Type: 'BoYesNoEnum', Index: 171, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties37 = { valueOf: function(){return 'Properties37';}, Type: 'BoYesNoEnum', Index: 172, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties38 = { valueOf: function(){return 'Properties38';}, Type: 'BoYesNoEnum', Index: 173, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties39 = { valueOf: function(){return 'Properties39';}, Type: 'BoYesNoEnum', Index: 174, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties40 = { valueOf: function(){return 'Properties40';}, Type: 'BoYesNoEnum', Index: 175, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties41 = { valueOf: function(){return 'Properties41';}, Type: 'BoYesNoEnum', Index: 176, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties42 = { valueOf: function(){return 'Properties42';}, Type: 'BoYesNoEnum', Index: 177, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties43 = { valueOf: function(){return 'Properties43';}, Type: 'BoYesNoEnum', Index: 178, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties44 = { valueOf: function(){return 'Properties44';}, Type: 'BoYesNoEnum', Index: 179, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties45 = { valueOf: function(){return 'Properties45';}, Type: 'BoYesNoEnum', Index: 180, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties46 = { valueOf: function(){return 'Properties46';}, Type: 'BoYesNoEnum', Index: 181, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties47 = { valueOf: function(){return 'Properties47';}, Type: 'BoYesNoEnum', Index: 182, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties48 = { valueOf: function(){return 'Properties48';}, Type: 'BoYesNoEnum', Index: 183, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties49 = { valueOf: function(){return 'Properties49';}, Type: 'BoYesNoEnum', Index: 184, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties50 = { valueOf: function(){return 'Properties50';}, Type: 'BoYesNoEnum', Index: 185, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties51 = { valueOf: function(){return 'Properties51';}, Type: 'BoYesNoEnum', Index: 186, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties52 = { valueOf: function(){return 'Properties52';}, Type: 'BoYesNoEnum', Index: 187, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties53 = { valueOf: function(){return 'Properties53';}, Type: 'BoYesNoEnum', Index: 188, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties54 = { valueOf: function(){return 'Properties54';}, Type: 'BoYesNoEnum', Index: 189, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties55 = { valueOf: function(){return 'Properties55';}, Type: 'BoYesNoEnum', Index: 190, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties56 = { valueOf: function(){return 'Properties56';}, Type: 'BoYesNoEnum', Index: 191, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties57 = { valueOf: function(){return 'Properties57';}, Type: 'BoYesNoEnum', Index: 192, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties58 = { valueOf: function(){return 'Properties58';}, Type: 'BoYesNoEnum', Index: 193, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties59 = { valueOf: function(){return 'Properties59';}, Type: 'BoYesNoEnum', Index: 194, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties60 = { valueOf: function(){return 'Properties60';}, Type: 'BoYesNoEnum', Index: 195, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties61 = { valueOf: function(){return 'Properties61';}, Type: 'BoYesNoEnum', Index: 196, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties62 = { valueOf: function(){return 'Properties62';}, Type: 'BoYesNoEnum', Index: 197, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties63 = { valueOf: function(){return 'Properties63';}, Type: 'BoYesNoEnum', Index: 198, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Properties64 = { valueOf: function(){return 'Properties64';}, Type: 'BoYesNoEnum', Index: 199, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CompanyRegistrationNumber = { valueOf: function(){return 'CompanyRegistrationNumber';}, Type: 'Edm.String', Index: 200, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.VerificationNumber = { valueOf: function(){return 'VerificationNumber';}, Type: 'Edm.String', Index: 201, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DiscountBaseObject = { valueOf: function(){return 'DiscountBaseObject';}, Type: 'DiscountGroupBaseObjectEnum', Index: 202, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DiscountRelations = { valueOf: function(){return 'DiscountRelations';}, Type: 'DiscountGroupRelationsEnum', Index: 203, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.TypeReport = { valueOf: function(){return 'TypeReport';}, Type: 'AssesseeTypeEnum', Index: 204, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ThresholdOverlook = { valueOf: function(){return 'ThresholdOverlook';}, Type: 'BoYesNoEnum', Index: 205, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.SurchargeOverlook = { valueOf: function(){return 'SurchargeOverlook';}, Type: 'BoYesNoEnum', Index: 206, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DownPaymentInterimAccount = { valueOf: function(){return 'DownPaymentInterimAccount';}, Type: 'Edm.String', Index: 207, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.OperationCode347 = { valueOf: function(){return 'OperationCode347';}, Type: 'OperationCode347Enum', Index: 208, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.InsuranceOperation347 = { valueOf: function(){return 'InsuranceOperation347';}, Type: 'BoYesNoEnum', Index: 209, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.HierarchicalDeduction = { valueOf: function(){return 'HierarchicalDeduction';}, Type: 'BoYesNoEnum', Index: 210, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ShaamGroup = { valueOf: function(){return 'ShaamGroup';}, Type: 'ShaamGroupEnum', Index: 211, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.WithholdingTaxCertified = { valueOf: function(){return 'WithholdingTaxCertified';}, Type: 'BoYesNoEnum', Index: 212, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BookkeepingCertified = { valueOf: function(){return 'BookkeepingCertified';}, Type: 'BoYesNoEnum', Index: 213, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.PlanningGroup = { valueOf: function(){return 'PlanningGroup';}, Type: 'Edm.String', Index: 214, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Affiliate = { valueOf: function(){return 'Affiliate';}, Type: 'BoYesNoEnum', Index: 215, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Industry = { valueOf: function(){return 'Industry';}, Type: 'Edm.Int32', Index: 216, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.VatIDNum = { valueOf: function(){return 'VatIDNum';}, Type: 'Edm.String', Index: 217, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DatevAccount = { valueOf: function(){return 'DatevAccount';}, Type: 'Edm.String', Index: 218, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DatevFirstDataEntry = { valueOf: function(){return 'DatevFirstDataEntry';}, Type: 'BoYesNoEnum', Index: 219, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.UseShippedGoodsAccount = { valueOf: function(){return 'UseShippedGoodsAccount';}, Type: 'BoYesNoEnum', Index: 220, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.GTSRegNo = { valueOf: function(){return 'GTSRegNo';}, Type: 'Edm.String', Index: 221, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.GTSBankAccountNo = { valueOf: function(){return 'GTSBankAccountNo';}, Type: 'Edm.String', Index: 222, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.GTSBillingAddrTel = { valueOf: function(){return 'GTSBillingAddrTel';}, Type: 'Edm.String', Index: 223, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ETaxWebSite = { valueOf: function(){return 'ETaxWebSite';}, Type: 'Edm.Int32', Index: 224, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.HouseBankIBAN = { valueOf: function(){return 'HouseBankIBAN';}, Type: 'Edm.String', Index: 225, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.VATRegistrationNumber = { valueOf: function(){return 'VATRegistrationNumber';}, Type: 'Edm.String', Index: 226, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.RepresentativeName = { valueOf: function(){return 'RepresentativeName';}, Type: 'Edm.String', Index: 227, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.IndustryType = { valueOf: function(){return 'IndustryType';}, Type: 'Edm.String', Index: 228, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BusinessType = { valueOf: function(){return 'BusinessType';}, Type: 'Edm.String', Index: 229, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.Series = { valueOf: function(){return 'Series';}, Type: 'Edm.Int32', Index: 230, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.AutomaticPosting = { valueOf: function(){return 'AutomaticPosting';}, Type: 'AutomaticPostingEnum', Index: 231, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.InterestAccount = { valueOf: function(){return 'InterestAccount';}, Type: 'Edm.String', Index: 232, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.FeeAccount = { valueOf: function(){return 'FeeAccount';}, Type: 'Edm.String', Index: 233, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CampaignNumber = { valueOf: function(){return 'CampaignNumber';}, Type: 'Edm.Int32', Index: 234, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.AliasName = { valueOf: function(){return 'AliasName';}, Type: 'Edm.String', Index: 235, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.DefaultBlanketAgreementNumber = { valueOf: function(){return 'DefaultBlanketAgreementNumber';}, Type: 'Edm.Int32', Index: 236, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EffectiveDiscount = { valueOf: function(){return 'EffectiveDiscount';}, Type: 'DiscountGroupRelationsEnum', Index: 237, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.NoDiscounts = { valueOf: function(){return 'NoDiscounts';}, Type: 'BoYesNoEnum', Index: 238, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EffectivePrice = { valueOf: function(){return 'EffectivePrice';}, Type: 'EffectivePriceEnum', Index: 239, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.GlobalLocationNumber = { valueOf: function(){return 'GlobalLocationNumber';}, Type: 'Edm.String', Index: 240, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDISenderID = { valueOf: function(){return 'EDISenderID';}, Type: 'Edm.String', Index: 241, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDIRecipientID = { valueOf: function(){return 'EDIRecipientID';}, Type: 'Edm.String', Index: 242, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ResidenNumber = { valueOf: function(){return 'ResidenNumber';}, Type: 'ResidenceNumberTypeEnum', Index: 243, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.RelationshipCode = { valueOf: function(){return 'RelationshipCode';}, Type: 'Edm.String', Index: 244, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.RelationshipDateFrom = { valueOf: function(){return 'RelationshipDateFrom';}, Type: 'Edm.DateTime', Index: 245, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.RelationshipDateTill = { valueOf: function(){return 'RelationshipDateTill';}, Type: 'Edm.DateTime', Index: 246, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.UnifiedFederalTaxID = { valueOf: function(){return 'UnifiedFederalTaxID';}, Type: 'Edm.String', Index: 247, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.AttachmentEntry = { valueOf: function(){return 'AttachmentEntry';}, Type: 'Edm.Int32', Index: 248, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.TypeOfOperation = { valueOf: function(){return 'TypeOfOperation';}, Type: 'TypeOfOperationEnum', Index: 249, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EndorsableChecksFromBP = { valueOf: function(){return 'EndorsableChecksFromBP';}, Type: 'BoYesNoEnum', Index: 250, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.AcceptsEndorsedChecks = { valueOf: function(){return 'AcceptsEndorsedChecks';}, Type: 'BoYesNoEnum', Index: 251, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.OwnerCode = { valueOf: function(){return 'OwnerCode';}, Type: 'Edm.Int32', Index: 252, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BlockSendingMarketingContent = { valueOf: function(){return 'BlockSendingMarketingContent';}, Type: 'BoYesNoEnum', Index: 253, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.AgentCode = { valueOf: function(){return 'AgentCode';}, Type: 'Edm.String', Index: 254, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.PriceMode = { valueOf: function(){return 'PriceMode';}, Type: 'PriceModeEnum', Index: 255, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocGenerationType = { valueOf: function(){return 'EDocGenerationType';}, Type: 'EDocGenerationTypeEnum', Index: 256, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocStreet = { valueOf: function(){return 'EDocStreet';}, Type: 'Edm.String', Index: 257, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocStreetNumber = { valueOf: function(){return 'EDocStreetNumber';}, Type: 'Edm.String', Index: 258, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocBuildingNumber = { valueOf: function(){return 'EDocBuildingNumber';}, Type: 'Edm.Int32', Index: 259, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocZipCode = { valueOf: function(){return 'EDocZipCode';}, Type: 'Edm.String', Index: 260, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocCity = { valueOf: function(){return 'EDocCity';}, Type: 'Edm.String', Index: 261, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocCountry = { valueOf: function(){return 'EDocCountry';}, Type: 'Edm.String', Index: 262, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocDistrict = { valueOf: function(){return 'EDocDistrict';}, Type: 'Edm.String', Index: 263, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocRepresentativeFirstName = { valueOf: function(){return 'EDocRepresentativeFirstName';}, Type: 'Edm.String', Index: 264, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocRepresentativeSurname = { valueOf: function(){return 'EDocRepresentativeSurname';}, Type: 'Edm.String', Index: 265, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocRepresentativeCompany = { valueOf: function(){return 'EDocRepresentativeCompany';}, Type: 'Edm.String', Index: 266, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocRepresentativeFiscalCode = { valueOf: function(){return 'EDocRepresentativeFiscalCode';}, Type: 'Edm.String', Index: 267, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocRepresentativeAdditionalId = { valueOf: function(){return 'EDocRepresentativeAdditionalId';}, Type: 'Edm.String', Index: 268, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.EDocPECAddress = { valueOf: function(){return 'EDocPECAddress';}, Type: 'Edm.String', Index: 269, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.IPACodeForPA = { valueOf: function(){return 'IPACodeForPA';}, Type: 'Edm.String', Index: 270, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.UpdateDate = { valueOf: function(){return 'UpdateDate';}, Type: 'Edm.DateTime', Index: 271, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.UpdateTime = { valueOf: function(){return 'UpdateTime';}, Type: 'Edm.Time', Index: 272, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ExemptionMaxAmountValidationType = { valueOf: function(){return 'ExemptionMaxAmountValidationType';}, Type: 'ExemptionMaxAmountValidationTypeEnum', Index: 273, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.ECommerceMerchantID = { valueOf: function(){return 'ECommerceMerchantID';}, Type: 'Edm.String', Index: 274, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.UseBillToAddrToDetermineTax = { valueOf: function(){return 'UseBillToAddrToDetermineTax';}, Type: 'BoYesNoEnum', Index: 275, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CreateDate = { valueOf: function(){return 'CreateDate';}, Type: 'Edm.DateTime', Index: 276, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.CreateTime = { valueOf: function(){return 'CreateTime';}, Type: 'Edm.Time', Index: 277, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.BusinessPartner.BPAddresses = { valueOf: function(){return 'BPAddresses';}, Type: 'BPAddress', Index: 278, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.ContactEmployees = { valueOf: function(){return 'ContactEmployees';}, Type: 'ContactEmployee', Index: 279, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.BPAccountReceivablePaybleCollection = { valueOf: function(){return 'BPAccountReceivablePaybleCollection';}, Type: 'BPAccountReceivablePayble', Index: 280, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.BPPaymentMethods = { valueOf: function(){return 'BPPaymentMethods';}, Type: 'BPPaymentMethod', Index: 281, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.BPWithholdingTaxCollection = { valueOf: function(){return 'BPWithholdingTaxCollection';}, Type: 'BPWithholdingTax', Index: 282, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.BPPaymentDates = { valueOf: function(){return 'BPPaymentDates';}, Type: 'BPPaymentDate', Index: 283, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.BPBranchAssignment = { valueOf: function(){return 'BPBranchAssignment';}, Type: 'BPBranchAssignmentItem', Index: 284, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.BPBankAccounts = { valueOf: function(){return 'BPBankAccounts';}, Type: 'BPBankAccount', Index: 285, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.BPFiscalTaxIDCollection = { valueOf: function(){return 'BPFiscalTaxIDCollection';}, Type: 'BPFiscalTaxID', Index: 286, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.DiscountGroups = { valueOf: function(){return 'DiscountGroups';}, Type: 'DiscountGroup', Index: 287, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.BPIntrastatExtension = { valueOf: function(){return 'BPIntrastatExtension';}, Type: 'BPIntrastatExtension', Index: 288, Nullable: true, IsArray: false, IsComplex: true };
SAPB1.BusinessPartner.BPBlockSendingMarketingContents = { valueOf: function(){return 'BPBlockSendingMarketingContents';}, Type: 'BPBlockSendingMarketingContent', Index: 289, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.BusinessPartner.prototype.CardCode = new String();
SAPB1.BusinessPartner.prototype.CardName = new String();
SAPB1.BusinessPartner.prototype.CardType = new String();
SAPB1.BusinessPartner.prototype.GroupCode = new Number();
SAPB1.BusinessPartner.prototype.Address = new String();
SAPB1.BusinessPartner.prototype.ZipCode = new String();
SAPB1.BusinessPartner.prototype.MailAddress = new String();
SAPB1.BusinessPartner.prototype.MailZipCode = new String();
SAPB1.BusinessPartner.prototype.Phone1 = new String();
SAPB1.BusinessPartner.prototype.Phone2 = new String();
SAPB1.BusinessPartner.prototype.Fax = new String();
SAPB1.BusinessPartner.prototype.ContactPerson = new String();
SAPB1.BusinessPartner.prototype.Notes = new String();
SAPB1.BusinessPartner.prototype.PayTermsGrpCode = new Number();
SAPB1.BusinessPartner.prototype.CreditLimit = new Number();
SAPB1.BusinessPartner.prototype.MaxCommitment = new Number();
SAPB1.BusinessPartner.prototype.DiscountPercent = new Number();
SAPB1.BusinessPartner.prototype.VatLiable = new String();
SAPB1.BusinessPartner.prototype.FederalTaxID = new String();
SAPB1.BusinessPartner.prototype.DeductibleAtSource = new String();
SAPB1.BusinessPartner.prototype.DeductionPercent = new Number();
SAPB1.BusinessPartner.prototype.DeductionValidUntil = new String();
SAPB1.BusinessPartner.prototype.PriceListNum = new Number();
SAPB1.BusinessPartner.prototype.IntrestRatePercent = new Number();
SAPB1.BusinessPartner.prototype.CommissionPercent = new Number();
SAPB1.BusinessPartner.prototype.CommissionGroupCode = new Number();
SAPB1.BusinessPartner.prototype.FreeText = new String();
SAPB1.BusinessPartner.prototype.SalesPersonCode = new Number();
SAPB1.BusinessPartner.prototype.Currency = new String();
SAPB1.BusinessPartner.prototype.RateDiffAccount = new String();
SAPB1.BusinessPartner.prototype.Cellular = new String();
SAPB1.BusinessPartner.prototype.AvarageLate = new Number();
SAPB1.BusinessPartner.prototype.City = new String();
SAPB1.BusinessPartner.prototype.County = new String();
SAPB1.BusinessPartner.prototype.Country = new String();
SAPB1.BusinessPartner.prototype.MailCity = new String();
SAPB1.BusinessPartner.prototype.MailCounty = new String();
SAPB1.BusinessPartner.prototype.MailCountry = new String();
SAPB1.BusinessPartner.prototype.EmailAddress = new String();
SAPB1.BusinessPartner.prototype.Picture = new String();
SAPB1.BusinessPartner.prototype.DefaultAccount = new String();
SAPB1.BusinessPartner.prototype.DefaultBranch = new String();
SAPB1.BusinessPartner.prototype.DefaultBankCode = new String();
SAPB1.BusinessPartner.prototype.AdditionalID = new String();
SAPB1.BusinessPartner.prototype.Pager = new String();
SAPB1.BusinessPartner.prototype.FatherCard = new String();
SAPB1.BusinessPartner.prototype.CardForeignName = new String();
SAPB1.BusinessPartner.prototype.FatherType = new String();
SAPB1.BusinessPartner.prototype.DeductionOffice = new String();
SAPB1.BusinessPartner.prototype.ExportCode = new String();
SAPB1.BusinessPartner.prototype.MinIntrest = new Number();
SAPB1.BusinessPartner.prototype.CurrentAccountBalance = new Number();
SAPB1.BusinessPartner.prototype.OpenDeliveryNotesBalance = new Number();
SAPB1.BusinessPartner.prototype.OpenOrdersBalance = new Number();
SAPB1.BusinessPartner.prototype.VatGroup = new String();
SAPB1.BusinessPartner.prototype.ShippingType = new Number();
SAPB1.BusinessPartner.prototype.Password = new String();
SAPB1.BusinessPartner.prototype.Indicator = new String();
SAPB1.BusinessPartner.prototype.IBAN = new String();
SAPB1.BusinessPartner.prototype.CreditCardCode = new Number();
SAPB1.BusinessPartner.prototype.CreditCardNum = new String();
SAPB1.BusinessPartner.prototype.CreditCardExpiration = new String();
SAPB1.BusinessPartner.prototype.DebitorAccount = new String();
SAPB1.BusinessPartner.prototype.OpenOpportunities = new Number();
SAPB1.BusinessPartner.prototype.Valid = new String();
SAPB1.BusinessPartner.prototype.ValidFrom = new String();
SAPB1.BusinessPartner.prototype.ValidTo = new String();
SAPB1.BusinessPartner.prototype.ValidRemarks = new String();
SAPB1.BusinessPartner.prototype.Frozen = new String();
SAPB1.BusinessPartner.prototype.FrozenFrom = new String();
SAPB1.BusinessPartner.prototype.FrozenTo = new String();
SAPB1.BusinessPartner.prototype.FrozenRemarks = new String();
SAPB1.BusinessPartner.prototype.Block = new String();
SAPB1.BusinessPartner.prototype.BillToState = new String();
SAPB1.BusinessPartner.prototype.ExemptNum = new String();
SAPB1.BusinessPartner.prototype.Priority = new Number();
SAPB1.BusinessPartner.prototype.FormCode1099 = new Number();
SAPB1.BusinessPartner.prototype.Box1099 = new String();
SAPB1.BusinessPartner.prototype.PeymentMethodCode = new String();
SAPB1.BusinessPartner.prototype.BackOrder = new String();
SAPB1.BusinessPartner.prototype.PartialDelivery = new String();
SAPB1.BusinessPartner.prototype.BlockDunning = new String();
SAPB1.BusinessPartner.prototype.BankCountry = new String();
SAPB1.BusinessPartner.prototype.HouseBank = new String();
SAPB1.BusinessPartner.prototype.HouseBankCountry = new String();
SAPB1.BusinessPartner.prototype.HouseBankAccount = new String();
SAPB1.BusinessPartner.prototype.ShipToDefault = new String();
SAPB1.BusinessPartner.prototype.DunningLevel = new Number();
SAPB1.BusinessPartner.prototype.DunningDate = new String();
SAPB1.BusinessPartner.prototype.CollectionAuthorization = new String();
SAPB1.BusinessPartner.prototype.DME = new String();
SAPB1.BusinessPartner.prototype.InstructionKey = new String();
SAPB1.BusinessPartner.prototype.SinglePayment = new String();
SAPB1.BusinessPartner.prototype.ISRBillerID = new String();
SAPB1.BusinessPartner.prototype.PaymentBlock = new String();
SAPB1.BusinessPartner.prototype.ReferenceDetails = new String();
SAPB1.BusinessPartner.prototype.HouseBankBranch = new String();
SAPB1.BusinessPartner.prototype.OwnerIDNumber = new String();
SAPB1.BusinessPartner.prototype.PaymentBlockDescription = new Number();
SAPB1.BusinessPartner.prototype.TaxExemptionLetterNum = new String();
SAPB1.BusinessPartner.prototype.MaxAmountOfExemption = new Number();
SAPB1.BusinessPartner.prototype.ExemptionValidityDateFrom = new String();
SAPB1.BusinessPartner.prototype.ExemptionValidityDateTo = new String();
SAPB1.BusinessPartner.prototype.LinkedBusinessPartner = new String();
SAPB1.BusinessPartner.prototype.LastMultiReconciliationNum = new Number();
SAPB1.BusinessPartner.prototype.DeferredTax = new String();
SAPB1.BusinessPartner.prototype.Equalization = new String();
SAPB1.BusinessPartner.prototype.SubjectToWithholdingTax = new String();
SAPB1.BusinessPartner.prototype.CertificateNumber = new String();
SAPB1.BusinessPartner.prototype.ExpirationDate = new String();
SAPB1.BusinessPartner.prototype.NationalInsuranceNum = new String();
SAPB1.BusinessPartner.prototype.AccrualCriteria = new String();
SAPB1.BusinessPartner.prototype.WTCode = new String();
SAPB1.BusinessPartner.prototype.BillToBuildingFloorRoom = new String();
SAPB1.BusinessPartner.prototype.DownPaymentClearAct = new String();
SAPB1.BusinessPartner.prototype.ChannelBP = new String();
SAPB1.BusinessPartner.prototype.DefaultTechnician = new Number();
SAPB1.BusinessPartner.prototype.BilltoDefault = new String();
SAPB1.BusinessPartner.prototype.CustomerBillofExchangDisc = new String();
SAPB1.BusinessPartner.prototype.Territory = new Number();
SAPB1.BusinessPartner.prototype.ShipToBuildingFloorRoom = new String();
SAPB1.BusinessPartner.prototype.CustomerBillofExchangPres = new String();
SAPB1.BusinessPartner.prototype.ProjectCode = new String();
SAPB1.BusinessPartner.prototype.VatGroupLatinAmerica = new String();
SAPB1.BusinessPartner.prototype.DunningTerm = new String();
SAPB1.BusinessPartner.prototype.Website = new String();
SAPB1.BusinessPartner.prototype.OtherReceivablePayable = new String();
SAPB1.BusinessPartner.prototype.BillofExchangeonCollection = new String();
SAPB1.BusinessPartner.prototype.CompanyPrivate = new String();
SAPB1.BusinessPartner.prototype.LanguageCode = new Number();
SAPB1.BusinessPartner.prototype.UnpaidBillofExchange = new String();
SAPB1.BusinessPartner.prototype.WithholdingTaxDeductionGroup = new Number();
SAPB1.BusinessPartner.prototype.ClosingDateProcedureNumber = new Number();
SAPB1.BusinessPartner.prototype.Profession = new String();
SAPB1.BusinessPartner.prototype.BankChargesAllocationCode = new String();
SAPB1.BusinessPartner.prototype.TaxRoundingRule = new String();
SAPB1.BusinessPartner.prototype.Properties1 = new String();
SAPB1.BusinessPartner.prototype.Properties2 = new String();
SAPB1.BusinessPartner.prototype.Properties3 = new String();
SAPB1.BusinessPartner.prototype.Properties4 = new String();
SAPB1.BusinessPartner.prototype.Properties5 = new String();
SAPB1.BusinessPartner.prototype.Properties6 = new String();
SAPB1.BusinessPartner.prototype.Properties7 = new String();
SAPB1.BusinessPartner.prototype.Properties8 = new String();
SAPB1.BusinessPartner.prototype.Properties9 = new String();
SAPB1.BusinessPartner.prototype.Properties10 = new String();
SAPB1.BusinessPartner.prototype.Properties11 = new String();
SAPB1.BusinessPartner.prototype.Properties12 = new String();
SAPB1.BusinessPartner.prototype.Properties13 = new String();
SAPB1.BusinessPartner.prototype.Properties14 = new String();
SAPB1.BusinessPartner.prototype.Properties15 = new String();
SAPB1.BusinessPartner.prototype.Properties16 = new String();
SAPB1.BusinessPartner.prototype.Properties17 = new String();
SAPB1.BusinessPartner.prototype.Properties18 = new String();
SAPB1.BusinessPartner.prototype.Properties19 = new String();
SAPB1.BusinessPartner.prototype.Properties20 = new String();
SAPB1.BusinessPartner.prototype.Properties21 = new String();
SAPB1.BusinessPartner.prototype.Properties22 = new String();
SAPB1.BusinessPartner.prototype.Properties23 = new String();
SAPB1.BusinessPartner.prototype.Properties24 = new String();
SAPB1.BusinessPartner.prototype.Properties25 = new String();
SAPB1.BusinessPartner.prototype.Properties26 = new String();
SAPB1.BusinessPartner.prototype.Properties27 = new String();
SAPB1.BusinessPartner.prototype.Properties28 = new String();
SAPB1.BusinessPartner.prototype.Properties29 = new String();
SAPB1.BusinessPartner.prototype.Properties30 = new String();
SAPB1.BusinessPartner.prototype.Properties31 = new String();
SAPB1.BusinessPartner.prototype.Properties32 = new String();
SAPB1.BusinessPartner.prototype.Properties33 = new String();
SAPB1.BusinessPartner.prototype.Properties34 = new String();
SAPB1.BusinessPartner.prototype.Properties35 = new String();
SAPB1.BusinessPartner.prototype.Properties36 = new String();
SAPB1.BusinessPartner.prototype.Properties37 = new String();
SAPB1.BusinessPartner.prototype.Properties38 = new String();
SAPB1.BusinessPartner.prototype.Properties39 = new String();
SAPB1.BusinessPartner.prototype.Properties40 = new String();
SAPB1.BusinessPartner.prototype.Properties41 = new String();
SAPB1.BusinessPartner.prototype.Properties42 = new String();
SAPB1.BusinessPartner.prototype.Properties43 = new String();
SAPB1.BusinessPartner.prototype.Properties44 = new String();
SAPB1.BusinessPartner.prototype.Properties45 = new String();
SAPB1.BusinessPartner.prototype.Properties46 = new String();
SAPB1.BusinessPartner.prototype.Properties47 = new String();
SAPB1.BusinessPartner.prototype.Properties48 = new String();
SAPB1.BusinessPartner.prototype.Properties49 = new String();
SAPB1.BusinessPartner.prototype.Properties50 = new String();
SAPB1.BusinessPartner.prototype.Properties51 = new String();
SAPB1.BusinessPartner.prototype.Properties52 = new String();
SAPB1.BusinessPartner.prototype.Properties53 = new String();
SAPB1.BusinessPartner.prototype.Properties54 = new String();
SAPB1.BusinessPartner.prototype.Properties55 = new String();
SAPB1.BusinessPartner.prototype.Properties56 = new String();
SAPB1.BusinessPartner.prototype.Properties57 = new String();
SAPB1.BusinessPartner.prototype.Properties58 = new String();
SAPB1.BusinessPartner.prototype.Properties59 = new String();
SAPB1.BusinessPartner.prototype.Properties60 = new String();
SAPB1.BusinessPartner.prototype.Properties61 = new String();
SAPB1.BusinessPartner.prototype.Properties62 = new String();
SAPB1.BusinessPartner.prototype.Properties63 = new String();
SAPB1.BusinessPartner.prototype.Properties64 = new String();
SAPB1.BusinessPartner.prototype.CompanyRegistrationNumber = new String();
SAPB1.BusinessPartner.prototype.VerificationNumber = new String();
SAPB1.BusinessPartner.prototype.DiscountBaseObject = new String();
SAPB1.BusinessPartner.prototype.DiscountRelations = new String();
SAPB1.BusinessPartner.prototype.TypeReport = new String();
SAPB1.BusinessPartner.prototype.ThresholdOverlook = new String();
SAPB1.BusinessPartner.prototype.SurchargeOverlook = new String();
SAPB1.BusinessPartner.prototype.DownPaymentInterimAccount = new String();
SAPB1.BusinessPartner.prototype.OperationCode347 = new String();
SAPB1.BusinessPartner.prototype.InsuranceOperation347 = new String();
SAPB1.BusinessPartner.prototype.HierarchicalDeduction = new String();
SAPB1.BusinessPartner.prototype.ShaamGroup = new String();
SAPB1.BusinessPartner.prototype.WithholdingTaxCertified = new String();
SAPB1.BusinessPartner.prototype.BookkeepingCertified = new String();
SAPB1.BusinessPartner.prototype.PlanningGroup = new String();
SAPB1.BusinessPartner.prototype.Affiliate = new String();
SAPB1.BusinessPartner.prototype.Industry = new Number();
SAPB1.BusinessPartner.prototype.VatIDNum = new String();
SAPB1.BusinessPartner.prototype.DatevAccount = new String();
SAPB1.BusinessPartner.prototype.DatevFirstDataEntry = new String();
SAPB1.BusinessPartner.prototype.UseShippedGoodsAccount = new String();
SAPB1.BusinessPartner.prototype.GTSRegNo = new String();
SAPB1.BusinessPartner.prototype.GTSBankAccountNo = new String();
SAPB1.BusinessPartner.prototype.GTSBillingAddrTel = new String();
SAPB1.BusinessPartner.prototype.ETaxWebSite = new Number();
SAPB1.BusinessPartner.prototype.HouseBankIBAN = new String();
SAPB1.BusinessPartner.prototype.VATRegistrationNumber = new String();
SAPB1.BusinessPartner.prototype.RepresentativeName = new String();
SAPB1.BusinessPartner.prototype.IndustryType = new String();
SAPB1.BusinessPartner.prototype.BusinessType = new String();
SAPB1.BusinessPartner.prototype.Series = new Number();
SAPB1.BusinessPartner.prototype.AutomaticPosting = new String();
SAPB1.BusinessPartner.prototype.InterestAccount = new String();
SAPB1.BusinessPartner.prototype.FeeAccount = new String();
SAPB1.BusinessPartner.prototype.CampaignNumber = new Number();
SAPB1.BusinessPartner.prototype.AliasName = new String();
SAPB1.BusinessPartner.prototype.DefaultBlanketAgreementNumber = new Number();
SAPB1.BusinessPartner.prototype.EffectiveDiscount = new String();
SAPB1.BusinessPartner.prototype.NoDiscounts = new String();
SAPB1.BusinessPartner.prototype.EffectivePrice = new String();
SAPB1.BusinessPartner.prototype.GlobalLocationNumber = new String();
SAPB1.BusinessPartner.prototype.EDISenderID = new String();
SAPB1.BusinessPartner.prototype.EDIRecipientID = new String();
SAPB1.BusinessPartner.prototype.ResidenNumber = new String();
SAPB1.BusinessPartner.prototype.RelationshipCode = new String();
SAPB1.BusinessPartner.prototype.RelationshipDateFrom = new String();
SAPB1.BusinessPartner.prototype.RelationshipDateTill = new String();
SAPB1.BusinessPartner.prototype.UnifiedFederalTaxID = new String();
SAPB1.BusinessPartner.prototype.AttachmentEntry = new Number();
SAPB1.BusinessPartner.prototype.TypeOfOperation = new String();
SAPB1.BusinessPartner.prototype.EndorsableChecksFromBP = new String();
SAPB1.BusinessPartner.prototype.AcceptsEndorsedChecks = new String();
SAPB1.BusinessPartner.prototype.OwnerCode = new Number();
SAPB1.BusinessPartner.prototype.BlockSendingMarketingContent = new String();
SAPB1.BusinessPartner.prototype.AgentCode = new String();
SAPB1.BusinessPartner.prototype.PriceMode = new String();
SAPB1.BusinessPartner.prototype.EDocGenerationType = new String();
SAPB1.BusinessPartner.prototype.EDocStreet = new String();
SAPB1.BusinessPartner.prototype.EDocStreetNumber = new String();
SAPB1.BusinessPartner.prototype.EDocBuildingNumber = new Number();
SAPB1.BusinessPartner.prototype.EDocZipCode = new String();
SAPB1.BusinessPartner.prototype.EDocCity = new String();
SAPB1.BusinessPartner.prototype.EDocCountry = new String();
SAPB1.BusinessPartner.prototype.EDocDistrict = new String();
SAPB1.BusinessPartner.prototype.EDocRepresentativeFirstName = new String();
SAPB1.BusinessPartner.prototype.EDocRepresentativeSurname = new String();
SAPB1.BusinessPartner.prototype.EDocRepresentativeCompany = new String();
SAPB1.BusinessPartner.prototype.EDocRepresentativeFiscalCode = new String();
SAPB1.BusinessPartner.prototype.EDocRepresentativeAdditionalId = new String();
SAPB1.BusinessPartner.prototype.EDocPECAddress = new String();
SAPB1.BusinessPartner.prototype.IPACodeForPA = new String();
SAPB1.BusinessPartner.prototype.UpdateDate = new String();
SAPB1.BusinessPartner.prototype.UpdateTime = new String();
SAPB1.BusinessPartner.prototype.ExemptionMaxAmountValidationType = new String();
SAPB1.BusinessPartner.prototype.ECommerceMerchantID = new String();
SAPB1.BusinessPartner.prototype.UseBillToAddrToDetermineTax = new String();
SAPB1.BusinessPartner.prototype.CreateDate = new String();
SAPB1.BusinessPartner.prototype.CreateTime = new String();
SAPB1.BusinessPartner.prototype.BPAddresses = new BPAddressCollection();
SAPB1.BusinessPartner.prototype.ContactEmployees = new ContactEmployeeCollection();
SAPB1.BusinessPartner.prototype.BPAccountReceivablePaybleCollection = new BPAccountReceivablePaybleCollection();
SAPB1.BusinessPartner.prototype.BPPaymentMethods = new BPPaymentMethodCollection();
SAPB1.BusinessPartner.prototype.BPWithholdingTaxCollection = new BPWithholdingTaxCollection();
SAPB1.BusinessPartner.prototype.BPPaymentDates = new BPPaymentDateCollection();
SAPB1.BusinessPartner.prototype.BPBranchAssignment = new BPBranchAssignmentItemCollection();
SAPB1.BusinessPartner.prototype.BPBankAccounts = new BPBankAccountCollection();
SAPB1.BusinessPartner.prototype.BPFiscalTaxIDCollection = new BPFiscalTaxIDCollection();
SAPB1.BusinessPartner.prototype.DiscountGroups = new DiscountGroupCollection();
SAPB1.BusinessPartner.prototype.BPIntrastatExtension = new BPIntrastatExtension();
SAPB1.BusinessPartner.prototype.BPBlockSendingMarketingContents = new BPBlockSendingMarketingContentCollection();

SAPB1.BusinessPartner.BPAddress = BPAddress
SAPB1.BusinessPartner.BPAddressCollection = BPAddressCollection
SAPB1.BusinessPartner.ContactEmployee = ContactEmployee
SAPB1.BusinessPartner.ContactEmployeeCollection = ContactEmployeeCollection
SAPB1.BusinessPartner.BPAccountReceivablePayble = BPAccountReceivablePayble
SAPB1.BusinessPartner.BPAccountReceivablePaybleCollection = BPAccountReceivablePaybleCollection
SAPB1.BusinessPartner.BPPaymentMethod = BPPaymentMethod
SAPB1.BusinessPartner.BPPaymentMethodCollection = BPPaymentMethodCollection
SAPB1.BusinessPartner.BPWithholdingTax = BPWithholdingTax
SAPB1.BusinessPartner.BPWithholdingTaxCollection = BPWithholdingTaxCollection
SAPB1.BusinessPartner.BPPaymentDate = BPPaymentDate
SAPB1.BusinessPartner.BPPaymentDateCollection = BPPaymentDateCollection
SAPB1.BusinessPartner.BPBranchAssignmentItem = BPBranchAssignmentItem
SAPB1.BusinessPartner.BPBranchAssignmentItemCollection = BPBranchAssignmentItemCollection
SAPB1.BusinessPartner.BPBankAccount = BPBankAccount
SAPB1.BusinessPartner.BPBankAccountCollection = BPBankAccountCollection
SAPB1.BusinessPartner.BPFiscalTaxID = BPFiscalTaxID
SAPB1.BusinessPartner.BPFiscalTaxIDCollection = BPFiscalTaxIDCollection
SAPB1.BusinessPartner.DiscountGroup = DiscountGroup
SAPB1.BusinessPartner.DiscountGroupCollection = DiscountGroupCollection
SAPB1.BusinessPartner.BPIntrastatExtension = BPIntrastatExtension
SAPB1.BusinessPartner.BPBlockSendingMarketingContent = BPBlockSendingMarketingContent
SAPB1.BusinessPartner.BPBlockSendingMarketingContentCollection = BPBlockSendingMarketingContentCollection

SAPB1.BusinessPartner.BoCardTypes = BoCardTypes
SAPB1.BusinessPartner.BoVatStatus = BoVatStatus
SAPB1.BusinessPartner.BoYesNoEnum = BoYesNoEnum
SAPB1.BusinessPartner.BoFatherCardTypes = BoFatherCardTypes
SAPB1.BusinessPartner.BoCardCompanyTypes = BoCardCompanyTypes
SAPB1.BusinessPartner.BoTaxRoundingRuleTypes = BoTaxRoundingRuleTypes
SAPB1.BusinessPartner.DiscountGroupBaseObjectEnum = DiscountGroupBaseObjectEnum
SAPB1.BusinessPartner.DiscountGroupRelationsEnum = DiscountGroupRelationsEnum
SAPB1.BusinessPartner.AssesseeTypeEnum = AssesseeTypeEnum
SAPB1.BusinessPartner.OperationCode347Enum = OperationCode347Enum
SAPB1.BusinessPartner.ShaamGroupEnum = ShaamGroupEnum
SAPB1.BusinessPartner.AutomaticPostingEnum = AutomaticPostingEnum
SAPB1.BusinessPartner.EffectivePriceEnum = EffectivePriceEnum
SAPB1.BusinessPartner.ResidenceNumberTypeEnum = ResidenceNumberTypeEnum
SAPB1.BusinessPartner.TypeOfOperationEnum = TypeOfOperationEnum
SAPB1.BusinessPartner.PriceModeEnum = PriceModeEnum
SAPB1.BusinessPartner.EDocGenerationTypeEnum = EDocGenerationTypeEnum
SAPB1.BusinessPartner.ExemptionMaxAmountValidationTypeEnum = ExemptionMaxAmountValidationTypeEnum

SAPB1.BusinessPartner.create = function (rawObject) {
    var instance = new SAPB1.BusinessPartner();
    for (var prop in rawObject) {
        if (rawObject.hasOwnProperty(prop)) {
            if (SAPB1.BusinessPartner.prototype.hasOwnProperty(prop)) {
                if (instance[prop] instanceof SAPB1.Collection) {
                    var collectionInstance = instance[prop].constructor.create(rawObject[prop]);
                    instance[prop] = collectionInstance;
                } else if (instance[prop] instanceof SAPB1.ComplexType) {
                    var complexInstance = instance[prop].constructor.create(rawObject[prop]);
                    instance[prop] = complexInstance;
                }
                else {
                    instance[prop] = rawObject[prop];
                }
            }
        }
    }
    return instance;
}


module.exports = SAPB1.BusinessPartner;
