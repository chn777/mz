

var ServiceLayerModule = require('Base/ServiceLayerModule.js');

//workaround the possible intellisense bug of VS
if (typeof (SAPB1) === "undefined") {
    SAPB1 = {};
}

SAPB1.FinancialAnalysisQuery = function () {
}
SAPB1.FinancialAnalysisQuery.prototype = new SAPB1.EntityType();
SAPB1.FinancialAnalysisQuery.prototype.constructor = SAPB1.FinancialAnalysisQuery;
SAPB1.FinancialAnalysisQuery.prototype.keys.push('id__');
SAPB1.FinancialAnalysisQuery.JournalTransactionInternalKey = { valueOf: function(){return 'JournalTransactionInternalKey';}, Type: 'Edm.Int32', Index: 0, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.JournalTransactionLineInternalKey = { valueOf: function(){return 'JournalTransactionLineInternalKey';}, Type: 'Edm.Int32', Index: 1, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ShortName = { valueOf: function(){return 'ShortName';}, Type: 'Edm.String', Index: 2, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.OffsetAccountName = { valueOf: function(){return 'OffsetAccountName';}, Type: 'Edm.String', Index: 3, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.TransactionSortCode = { valueOf: function(){return 'TransactionSortCode';}, Type: 'Edm.String', Index: 4, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BaseDocumentInternalKey = { valueOf: function(){return 'BaseDocumentInternalKey';}, Type: 'Edm.Int32', Index: 5, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentNumber = { valueOf: function(){return 'DocumentNumber';}, Type: 'Edm.String', Index: 6, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATGroup = { valueOf: function(){return 'VATGroup';}, Type: 'Edm.String', Index: 7, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATRate = { valueOf: function(){return 'VATRate';}, Type: 'Edm.Double', Index: 8, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.WithholdingTaxCode = { valueOf: function(){return 'WithholdingTaxCode';}, Type: 'Edm.String', Index: 9, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.FederalTaxID = { valueOf: function(){return 'FederalTaxID';}, Type: 'Edm.String', Index: 10, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATRegistrationNumber = { valueOf: function(){return 'VATRegistrationNumber';}, Type: 'Edm.String', Index: 11, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.Reference1 = { valueOf: function(){return 'Reference1';}, Type: 'Edm.String', Index: 12, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.Reference2 = { valueOf: function(){return 'Reference2';}, Type: 'Edm.String', Index: 13, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.Reference3 = { valueOf: function(){return 'Reference3';}, Type: 'Edm.String', Index: 14, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.IndicatorCode = { valueOf: function(){return 'IndicatorCode';}, Type: 'Edm.String', Index: 15, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.IsAdjustingTransaction = { valueOf: function(){return 'IsAdjustingTransaction';}, Type: 'Edm.String', Index: 16, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.Series = { valueOf: function(){return 'Series';}, Type: 'Edm.Int32', Index: 17, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SeriesNumber = { valueOf: function(){return 'SeriesNumber';}, Type: 'Edm.Int32', Index: 18, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.JournalEntryCreator = { valueOf: function(){return 'JournalEntryCreator';}, Type: 'Edm.String', Index: 19, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.JournalEntryApprover = { valueOf: function(){return 'JournalEntryApprover';}, Type: 'Edm.String', Index: 20, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.IsAutoReversed = { valueOf: function(){return 'IsAutoReversed';}, Type: 'Edm.String', Index: 21, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ReversedDate = { valueOf: function(){return 'ReversedDate';}, Type: 'Edm.Date', Index: 22, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ReversedJournalEntry = { valueOf: function(){return 'ReversedJournalEntry';}, Type: 'Edm.Int32', Index: 23, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.TaxCalculationIsAutomatic = { valueOf: function(){return 'TaxCalculationIsAutomatic';}, Type: 'Edm.String', Index: 24, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SupplementaryCode = { valueOf: function(){return 'SupplementaryCode';}, Type: 'Edm.String', Index: 25, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountCode = { valueOf: function(){return 'AccountCode';}, Type: 'Edm.String', Index: 26, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode = { valueOf: function(){return 'SegmentationAccountCode';}, Type: 'Edm.String', Index: 27, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountName = { valueOf: function(){return 'AccountName';}, Type: 'Edm.String', Index: 28, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountForeignName = { valueOf: function(){return 'AccountForeignName';}, Type: 'Edm.String', Index: 29, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ParentAccountCode = { valueOf: function(){return 'ParentAccountCode';}, Type: 'Edm.String', Index: 30, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ParentAccountName = { valueOf: function(){return 'ParentAccountName';}, Type: 'Edm.String', Index: 31, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountType = { valueOf: function(){return 'AccountType';}, Type: 'Edm.String', Index: 32, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.IsCashAccount = { valueOf: function(){return 'IsCashAccount';}, Type: 'Edm.String', Index: 33, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CategoryName = { valueOf: function(){return 'CategoryName';}, Type: 'Edm.String', Index: 34, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CategorySource = { valueOf: function(){return 'CategorySource';}, Type: 'Edm.String', Index: 35, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountBalance = { valueOf: function(){return 'AccountBalance';}, Type: 'Edm.Double', Index: 36, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountIsPostable = { valueOf: function(){return 'AccountIsPostable';}, Type: 'Edm.String', Index: 37, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountLevel = { valueOf: function(){return 'AccountLevel';}, Type: 'Edm.Int16', Index: 38, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ExternalAccountCode = { valueOf: function(){return 'ExternalAccountCode';}, Type: 'Edm.String', Index: 39, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ExportCode = { valueOf: function(){return 'ExportCode';}, Type: 'Edm.String', Index: 40, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountGroupLine = { valueOf: function(){return 'AccountGroupLine';}, Type: 'Edm.Int32', Index: 41, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountGroupMask = { valueOf: function(){return 'AccountGroupMask';}, Type: 'Edm.Int16', Index: 42, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode0 = { valueOf: function(){return 'SegmentationAccountCode0';}, Type: 'Edm.String', Index: 43, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode1 = { valueOf: function(){return 'SegmentationAccountCode1';}, Type: 'Edm.String', Index: 44, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountName1 = { valueOf: function(){return 'SegmentationAccountName1';}, Type: 'Edm.String', Index: 45, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountShortName1 = { valueOf: function(){return 'SegmentationAccountShortName1';}, Type: 'Edm.String', Index: 46, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode2 = { valueOf: function(){return 'SegmentationAccountCode2';}, Type: 'Edm.String', Index: 47, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountName2 = { valueOf: function(){return 'SegmentationAccountName2';}, Type: 'Edm.String', Index: 48, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountShortName2 = { valueOf: function(){return 'SegmentationAccountShortName2';}, Type: 'Edm.String', Index: 49, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode3 = { valueOf: function(){return 'SegmentationAccountCode3';}, Type: 'Edm.String', Index: 50, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountName3 = { valueOf: function(){return 'SegmentationAccountName3';}, Type: 'Edm.String', Index: 51, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountShortName3 = { valueOf: function(){return 'SegmentationAccountShortName3';}, Type: 'Edm.String', Index: 52, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode4 = { valueOf: function(){return 'SegmentationAccountCode4';}, Type: 'Edm.String', Index: 53, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountName4 = { valueOf: function(){return 'SegmentationAccountName4';}, Type: 'Edm.String', Index: 54, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountShortName4 = { valueOf: function(){return 'SegmentationAccountShortName4';}, Type: 'Edm.String', Index: 55, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode5 = { valueOf: function(){return 'SegmentationAccountCode5';}, Type: 'Edm.String', Index: 56, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountName5 = { valueOf: function(){return 'SegmentationAccountName5';}, Type: 'Edm.String', Index: 57, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountShortName5 = { valueOf: function(){return 'SegmentationAccountShortName5';}, Type: 'Edm.String', Index: 58, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode6 = { valueOf: function(){return 'SegmentationAccountCode6';}, Type: 'Edm.String', Index: 59, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountName6 = { valueOf: function(){return 'SegmentationAccountName6';}, Type: 'Edm.String', Index: 60, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountShortName6 = { valueOf: function(){return 'SegmentationAccountShortName6';}, Type: 'Edm.String', Index: 61, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode7 = { valueOf: function(){return 'SegmentationAccountCode7';}, Type: 'Edm.String', Index: 62, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountName7 = { valueOf: function(){return 'SegmentationAccountName7';}, Type: 'Edm.String', Index: 63, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountShortName7 = { valueOf: function(){return 'SegmentationAccountShortName7';}, Type: 'Edm.String', Index: 64, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode8 = { valueOf: function(){return 'SegmentationAccountCode8';}, Type: 'Edm.String', Index: 65, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountName8 = { valueOf: function(){return 'SegmentationAccountName8';}, Type: 'Edm.String', Index: 66, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountShortName8 = { valueOf: function(){return 'SegmentationAccountShortName8';}, Type: 'Edm.String', Index: 67, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountCode9 = { valueOf: function(){return 'SegmentationAccountCode9';}, Type: 'Edm.String', Index: 68, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountName9 = { valueOf: function(){return 'SegmentationAccountName9';}, Type: 'Edm.String', Index: 69, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SegmentationAccountShortName9 = { valueOf: function(){return 'SegmentationAccountShortName9';}, Type: 'Edm.String', Index: 70, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AccountNameAndCode = { valueOf: function(){return 'AccountNameAndCode';}, Type: 'Edm.String', Index: 71, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ParentAccountNameAndCode = { valueOf: function(){return 'ParentAccountNameAndCode';}, Type: 'Edm.String', Index: 72, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PostingDate = { valueOf: function(){return 'PostingDate';}, Type: 'Edm.Date', Index: 73, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PostingYear = { valueOf: function(){return 'PostingYear';}, Type: 'Edm.String', Index: 74, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PostingQuarter = { valueOf: function(){return 'PostingQuarter';}, Type: 'Edm.String', Index: 75, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PostingMonth = { valueOf: function(){return 'PostingMonth';}, Type: 'Edm.String', Index: 76, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PostingWeek = { valueOf: function(){return 'PostingWeek';}, Type: 'Edm.String', Index: 77, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PostingDateSQL = { valueOf: function(){return 'PostingDateSQL';}, Type: 'Edm.Date', Index: 78, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PostingYearAndQuarter = { valueOf: function(){return 'PostingYearAndQuarter';}, Type: 'Edm.String', Index: 79, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PostingYearAndMonth = { valueOf: function(){return 'PostingYearAndMonth';}, Type: 'Edm.String', Index: 80, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PostingYearAndWeek = { valueOf: function(){return 'PostingYearAndWeek';}, Type: 'Edm.String', Index: 81, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DueDate = { valueOf: function(){return 'DueDate';}, Type: 'Edm.Date', Index: 82, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DueYear = { valueOf: function(){return 'DueYear';}, Type: 'Edm.String', Index: 83, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DueQuarter = { valueOf: function(){return 'DueQuarter';}, Type: 'Edm.String', Index: 84, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DueMonth = { valueOf: function(){return 'DueMonth';}, Type: 'Edm.String', Index: 85, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DueWeek = { valueOf: function(){return 'DueWeek';}, Type: 'Edm.String', Index: 86, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DueDateSQL = { valueOf: function(){return 'DueDateSQL';}, Type: 'Edm.Date', Index: 87, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DueYearAndQuarter = { valueOf: function(){return 'DueYearAndQuarter';}, Type: 'Edm.String', Index: 88, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DueYearAndMonth = { valueOf: function(){return 'DueYearAndMonth';}, Type: 'Edm.String', Index: 89, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DueYearAndWeek = { valueOf: function(){return 'DueYearAndWeek';}, Type: 'Edm.String', Index: 90, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentDate = { valueOf: function(){return 'DocumentDate';}, Type: 'Edm.Date', Index: 91, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentYear = { valueOf: function(){return 'DocumentYear';}, Type: 'Edm.String', Index: 92, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentQuarter = { valueOf: function(){return 'DocumentQuarter';}, Type: 'Edm.String', Index: 93, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentMonth = { valueOf: function(){return 'DocumentMonth';}, Type: 'Edm.String', Index: 94, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentWeek = { valueOf: function(){return 'DocumentWeek';}, Type: 'Edm.String', Index: 95, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentDateSQL = { valueOf: function(){return 'DocumentDateSQL';}, Type: 'Edm.Date', Index: 96, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentYearAndQuarter = { valueOf: function(){return 'DocumentYearAndQuarter';}, Type: 'Edm.String', Index: 97, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentYearAndMonth = { valueOf: function(){return 'DocumentYearAndMonth';}, Type: 'Edm.String', Index: 98, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentYearAndWeek = { valueOf: function(){return 'DocumentYearAndWeek';}, Type: 'Edm.String', Index: 99, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BranchCode = { valueOf: function(){return 'BranchCode';}, Type: 'Edm.Int32', Index: 100, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BranchName = { valueOf: function(){return 'BranchName';}, Type: 'Edm.String', Index: 101, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BranchCountry = { valueOf: function(){return 'BranchCountry';}, Type: 'Edm.String', Index: 102, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BranchIsActive = { valueOf: function(){return 'BranchIsActive';}, Type: 'Edm.String', Index: 103, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.IsMainBranch = { valueOf: function(){return 'IsMainBranch';}, Type: 'Edm.String', Index: 104, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BranchRegistrationNumber = { valueOf: function(){return 'BranchRegistrationNumber';}, Type: 'Edm.String', Index: 105, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ProjectCode = { valueOf: function(){return 'ProjectCode';}, Type: 'Edm.String', Index: 106, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ProjectName = { valueOf: function(){return 'ProjectName';}, Type: 'Edm.String', Index: 107, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ProjectNameAndCode = { valueOf: function(){return 'ProjectNameAndCode';}, Type: 'Edm.String', Index: 108, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ProjectIsActive = { valueOf: function(){return 'ProjectIsActive';}, Type: 'Edm.String', Index: 109, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.FinancialPeriodInternalKey = { valueOf: function(){return 'FinancialPeriodInternalKey';}, Type: 'Edm.Int32', Index: 110, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.FinancialPeriodCode = { valueOf: function(){return 'FinancialPeriodCode';}, Type: 'Edm.String', Index: 111, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.FinancialPeriodName = { valueOf: function(){return 'FinancialPeriodName';}, Type: 'Edm.String', Index: 112, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PeriodStart = { valueOf: function(){return 'PeriodStart';}, Type: 'Edm.Int32', Index: 113, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PeriodEnd = { valueOf: function(){return 'PeriodEnd';}, Type: 'Edm.Int32', Index: 114, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PeriodStart2 = { valueOf: function(){return 'PeriodStart2';}, Type: 'Edm.Date', Index: 115, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PeriodEnd2 = { valueOf: function(){return 'PeriodEnd2';}, Type: 'Edm.Date', Index: 116, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.FiscalYear = { valueOf: function(){return 'FiscalYear';}, Type: 'Edm.Int16', Index: 117, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.FiscalYearStartDate = { valueOf: function(){return 'FiscalYearStartDate';}, Type: 'Edm.Date', Index: 118, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PeriodStatus = { valueOf: function(){return 'PeriodStatus';}, Type: 'Edm.String', Index: 119, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.SubType = { valueOf: function(){return 'SubType';}, Type: 'Edm.String', Index: 120, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.PeriodIndicator = { valueOf: function(){return 'PeriodIndicator';}, Type: 'Edm.String', Index: 121, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentTypeCode = { valueOf: function(){return 'DocumentTypeCode';}, Type: 'Edm.String', Index: 122, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentTypeShortName = { valueOf: function(){return 'DocumentTypeShortName';}, Type: 'Edm.String', Index: 123, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentTypeDisplayName = { valueOf: function(){return 'DocumentTypeDisplayName';}, Type: 'Edm.String', Index: 124, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DocumentTypeGroup = { valueOf: function(){return 'DocumentTypeGroup';}, Type: 'Edm.String', Index: 125, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATDate = { valueOf: function(){return 'VATDate';}, Type: 'Edm.Date', Index: 126, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATYear = { valueOf: function(){return 'VATYear';}, Type: 'Edm.String', Index: 127, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATQuarter = { valueOf: function(){return 'VATQuarter';}, Type: 'Edm.String', Index: 128, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATMonth = { valueOf: function(){return 'VATMonth';}, Type: 'Edm.String', Index: 129, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATWeek = { valueOf: function(){return 'VATWeek';}, Type: 'Edm.String', Index: 130, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATDateSQL = { valueOf: function(){return 'VATDateSQL';}, Type: 'Edm.Date', Index: 131, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ReconciliationDate = { valueOf: function(){return 'ReconciliationDate';}, Type: 'Edm.Date', Index: 132, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ReconciliationYear = { valueOf: function(){return 'ReconciliationYear';}, Type: 'Edm.String', Index: 133, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ReconciliationQuarter = { valueOf: function(){return 'ReconciliationQuarter';}, Type: 'Edm.String', Index: 134, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ReconciliationMonth = { valueOf: function(){return 'ReconciliationMonth';}, Type: 'Edm.String', Index: 135, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ReconciliationWeek = { valueOf: function(){return 'ReconciliationWeek';}, Type: 'Edm.String', Index: 136, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ReconciliationDateSQL = { valueOf: function(){return 'ReconciliationDateSQL';}, Type: 'Edm.Date', Index: 137, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CashFlowLineItemInternalKey = { valueOf: function(){return 'CashFlowLineItemInternalKey';}, Type: 'Edm.Int32', Index: 138, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ParentItemInternalKey = { valueOf: function(){return 'ParentItemInternalKey';}, Type: 'Edm.Int32', Index: 139, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.ParentItemName = { valueOf: function(){return 'ParentItemName';}, Type: 'Edm.String', Index: 140, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CashFlowLineItemName = { valueOf: function(){return 'CashFlowLineItemName';}, Type: 'Edm.String', Index: 141, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CashFlowLineNumber = { valueOf: function(){return 'CashFlowLineNumber';}, Type: 'Edm.String', Index: 142, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.IsActiveItem = { valueOf: function(){return 'IsActiveItem';}, Type: 'Edm.String', Index: 143, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CashFlowItemLevel = { valueOf: function(){return 'CashFlowItemLevel';}, Type: 'Edm.Int16', Index: 144, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CashFlowItemDrawer = { valueOf: function(){return 'CashFlowItemDrawer';}, Type: 'Edm.Int16', Index: 145, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.GroupLineNumber = { valueOf: function(){return 'GroupLineNumber';}, Type: 'Edm.Int32', Index: 146, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.Direction = { valueOf: function(){return 'Direction';}, Type: 'Edm.Int16', Index: 147, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CashFlowLineItem = { valueOf: function(){return 'CashFlowLineItem';}, Type: 'Edm.String', Index: 148, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CashFlowParentItem = { valueOf: function(){return 'CashFlowParentItem';}, Type: 'Edm.String', Index: 149, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DebitLC = { valueOf: function(){return 'DebitLC';}, Type: 'Edm.Double', Index: 150, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CreditLC = { valueOf: function(){return 'CreditLC';}, Type: 'Edm.Double', Index: 151, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.CreditSC = { valueOf: function(){return 'CreditSC';}, Type: 'Edm.Double', Index: 152, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.DebitSC = { valueOf: function(){return 'DebitSC';}, Type: 'Edm.Double', Index: 153, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BalanceDueDebitLC = { valueOf: function(){return 'BalanceDueDebitLC';}, Type: 'Edm.Double', Index: 154, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BalanceDueCreditLC = { valueOf: function(){return 'BalanceDueCreditLC';}, Type: 'Edm.Double', Index: 155, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BalanceDueDebitSC = { valueOf: function(){return 'BalanceDueDebitSC';}, Type: 'Edm.Double', Index: 156, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.BalanceDueCreditSC = { valueOf: function(){return 'BalanceDueCreditSC';}, Type: 'Edm.Double', Index: 157, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.TaxBaseAmountLC = { valueOf: function(){return 'TaxBaseAmountLC';}, Type: 'Edm.Double', Index: 158, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.TaxBaseAmountSC = { valueOf: function(){return 'TaxBaseAmountSC';}, Type: 'Edm.Double', Index: 159, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATAmountLC = { valueOf: function(){return 'VATAmountLC';}, Type: 'Edm.Double', Index: 160, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.VATAmountSC = { valueOf: function(){return 'VATAmountSC';}, Type: 'Edm.Double', Index: 161, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.WithholdingTaxAmountLC = { valueOf: function(){return 'WithholdingTaxAmountLC';}, Type: 'Edm.Double', Index: 162, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.WithholdingTaxAmountSC = { valueOf: function(){return 'WithholdingTaxAmountSC';}, Type: 'Edm.Double', Index: 163, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AppliedWTaxAmountLC = { valueOf: function(){return 'AppliedWTaxAmountLC';}, Type: 'Edm.Double', Index: 164, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.AppliedWTaxAmountSC = { valueOf: function(){return 'AppliedWTaxAmountSC';}, Type: 'Edm.Double', Index: 165, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.id__ = { valueOf: function(){return 'id__';}, Type: 'Edm.Int32', Index: 166, Nullable: false, IsArray: false, IsComplex: false };
SAPB1.FinancialAnalysisQuery.prototype.JournalTransactionInternalKey = new Number();
SAPB1.FinancialAnalysisQuery.prototype.JournalTransactionLineInternalKey = new Number();
SAPB1.FinancialAnalysisQuery.prototype.ShortName = new String();
SAPB1.FinancialAnalysisQuery.prototype.OffsetAccountName = new String();
SAPB1.FinancialAnalysisQuery.prototype.TransactionSortCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.BaseDocumentInternalKey = new Number();
SAPB1.FinancialAnalysisQuery.prototype.DocumentNumber = new String();
SAPB1.FinancialAnalysisQuery.prototype.VATGroup = new String();
SAPB1.FinancialAnalysisQuery.prototype.VATRate = new Number();
SAPB1.FinancialAnalysisQuery.prototype.WithholdingTaxCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.FederalTaxID = new String();
SAPB1.FinancialAnalysisQuery.prototype.VATRegistrationNumber = new String();
SAPB1.FinancialAnalysisQuery.prototype.Reference1 = new String();
SAPB1.FinancialAnalysisQuery.prototype.Reference2 = new String();
SAPB1.FinancialAnalysisQuery.prototype.Reference3 = new String();
SAPB1.FinancialAnalysisQuery.prototype.IndicatorCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.IsAdjustingTransaction = new String();
SAPB1.FinancialAnalysisQuery.prototype.Series = new Number();
SAPB1.FinancialAnalysisQuery.prototype.SeriesNumber = new Number();
SAPB1.FinancialAnalysisQuery.prototype.JournalEntryCreator = new String();
SAPB1.FinancialAnalysisQuery.prototype.JournalEntryApprover = new String();
SAPB1.FinancialAnalysisQuery.prototype.IsAutoReversed = new String();
SAPB1.FinancialAnalysisQuery.prototype.ReversedDate = new String();
SAPB1.FinancialAnalysisQuery.prototype.ReversedJournalEntry = new Number();
SAPB1.FinancialAnalysisQuery.prototype.TaxCalculationIsAutomatic = new String();
SAPB1.FinancialAnalysisQuery.prototype.SupplementaryCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.AccountCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.AccountName = new String();
SAPB1.FinancialAnalysisQuery.prototype.AccountForeignName = new String();
SAPB1.FinancialAnalysisQuery.prototype.ParentAccountCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.ParentAccountName = new String();
SAPB1.FinancialAnalysisQuery.prototype.AccountType = new String();
SAPB1.FinancialAnalysisQuery.prototype.IsCashAccount = new String();
SAPB1.FinancialAnalysisQuery.prototype.CategoryName = new String();
SAPB1.FinancialAnalysisQuery.prototype.CategorySource = new String();
SAPB1.FinancialAnalysisQuery.prototype.AccountBalance = new Number();
SAPB1.FinancialAnalysisQuery.prototype.AccountIsPostable = new String();
SAPB1.FinancialAnalysisQuery.prototype.AccountLevel = new Number();
SAPB1.FinancialAnalysisQuery.prototype.ExternalAccountCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.ExportCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.AccountGroupLine = new Number();
SAPB1.FinancialAnalysisQuery.prototype.AccountGroupMask = new Number();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode0 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode1 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountName1 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountShortName1 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode2 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountName2 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountShortName2 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode3 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountName3 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountShortName3 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode4 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountName4 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountShortName4 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode5 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountName5 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountShortName5 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode6 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountName6 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountShortName6 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode7 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountName7 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountShortName7 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode8 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountName8 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountShortName8 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountCode9 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountName9 = new String();
SAPB1.FinancialAnalysisQuery.prototype.SegmentationAccountShortName9 = new String();
SAPB1.FinancialAnalysisQuery.prototype.AccountNameAndCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.ParentAccountNameAndCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.PostingDate = new String();
SAPB1.FinancialAnalysisQuery.prototype.PostingYear = new String();
SAPB1.FinancialAnalysisQuery.prototype.PostingQuarter = new String();
SAPB1.FinancialAnalysisQuery.prototype.PostingMonth = new String();
SAPB1.FinancialAnalysisQuery.prototype.PostingWeek = new String();
SAPB1.FinancialAnalysisQuery.prototype.PostingDateSQL = new String();
SAPB1.FinancialAnalysisQuery.prototype.PostingYearAndQuarter = new String();
SAPB1.FinancialAnalysisQuery.prototype.PostingYearAndMonth = new String();
SAPB1.FinancialAnalysisQuery.prototype.PostingYearAndWeek = new String();
SAPB1.FinancialAnalysisQuery.prototype.DueDate = new String();
SAPB1.FinancialAnalysisQuery.prototype.DueYear = new String();
SAPB1.FinancialAnalysisQuery.prototype.DueQuarter = new String();
SAPB1.FinancialAnalysisQuery.prototype.DueMonth = new String();
SAPB1.FinancialAnalysisQuery.prototype.DueWeek = new String();
SAPB1.FinancialAnalysisQuery.prototype.DueDateSQL = new String();
SAPB1.FinancialAnalysisQuery.prototype.DueYearAndQuarter = new String();
SAPB1.FinancialAnalysisQuery.prototype.DueYearAndMonth = new String();
SAPB1.FinancialAnalysisQuery.prototype.DueYearAndWeek = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentDate = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentYear = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentQuarter = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentMonth = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentWeek = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentDateSQL = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentYearAndQuarter = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentYearAndMonth = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentYearAndWeek = new String();
SAPB1.FinancialAnalysisQuery.prototype.BranchCode = new Number();
SAPB1.FinancialAnalysisQuery.prototype.BranchName = new String();
SAPB1.FinancialAnalysisQuery.prototype.BranchCountry = new String();
SAPB1.FinancialAnalysisQuery.prototype.BranchIsActive = new String();
SAPB1.FinancialAnalysisQuery.prototype.IsMainBranch = new String();
SAPB1.FinancialAnalysisQuery.prototype.BranchRegistrationNumber = new String();
SAPB1.FinancialAnalysisQuery.prototype.ProjectCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.ProjectName = new String();
SAPB1.FinancialAnalysisQuery.prototype.ProjectNameAndCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.ProjectIsActive = new String();
SAPB1.FinancialAnalysisQuery.prototype.FinancialPeriodInternalKey = new Number();
SAPB1.FinancialAnalysisQuery.prototype.FinancialPeriodCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.FinancialPeriodName = new String();
SAPB1.FinancialAnalysisQuery.prototype.PeriodStart = new Number();
SAPB1.FinancialAnalysisQuery.prototype.PeriodEnd = new Number();
SAPB1.FinancialAnalysisQuery.prototype.PeriodStart2 = new String();
SAPB1.FinancialAnalysisQuery.prototype.PeriodEnd2 = new String();
SAPB1.FinancialAnalysisQuery.prototype.FiscalYear = new Number();
SAPB1.FinancialAnalysisQuery.prototype.FiscalYearStartDate = new String();
SAPB1.FinancialAnalysisQuery.prototype.PeriodStatus = new String();
SAPB1.FinancialAnalysisQuery.prototype.SubType = new String();
SAPB1.FinancialAnalysisQuery.prototype.PeriodIndicator = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentTypeCode = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentTypeShortName = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentTypeDisplayName = new String();
SAPB1.FinancialAnalysisQuery.prototype.DocumentTypeGroup = new String();
SAPB1.FinancialAnalysisQuery.prototype.VATDate = new String();
SAPB1.FinancialAnalysisQuery.prototype.VATYear = new String();
SAPB1.FinancialAnalysisQuery.prototype.VATQuarter = new String();
SAPB1.FinancialAnalysisQuery.prototype.VATMonth = new String();
SAPB1.FinancialAnalysisQuery.prototype.VATWeek = new String();
SAPB1.FinancialAnalysisQuery.prototype.VATDateSQL = new String();
SAPB1.FinancialAnalysisQuery.prototype.ReconciliationDate = new String();
SAPB1.FinancialAnalysisQuery.prototype.ReconciliationYear = new String();
SAPB1.FinancialAnalysisQuery.prototype.ReconciliationQuarter = new String();
SAPB1.FinancialAnalysisQuery.prototype.ReconciliationMonth = new String();
SAPB1.FinancialAnalysisQuery.prototype.ReconciliationWeek = new String();
SAPB1.FinancialAnalysisQuery.prototype.ReconciliationDateSQL = new String();
SAPB1.FinancialAnalysisQuery.prototype.CashFlowLineItemInternalKey = new Number();
SAPB1.FinancialAnalysisQuery.prototype.ParentItemInternalKey = new Number();
SAPB1.FinancialAnalysisQuery.prototype.ParentItemName = new String();
SAPB1.FinancialAnalysisQuery.prototype.CashFlowLineItemName = new String();
SAPB1.FinancialAnalysisQuery.prototype.CashFlowLineNumber = new String();
SAPB1.FinancialAnalysisQuery.prototype.IsActiveItem = new String();
SAPB1.FinancialAnalysisQuery.prototype.CashFlowItemLevel = new Number();
SAPB1.FinancialAnalysisQuery.prototype.CashFlowItemDrawer = new Number();
SAPB1.FinancialAnalysisQuery.prototype.GroupLineNumber = new Number();
SAPB1.FinancialAnalysisQuery.prototype.Direction = new Number();
SAPB1.FinancialAnalysisQuery.prototype.CashFlowLineItem = new String();
SAPB1.FinancialAnalysisQuery.prototype.CashFlowParentItem = new String();
SAPB1.FinancialAnalysisQuery.prototype.DebitLC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.CreditLC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.CreditSC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.DebitSC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.BalanceDueDebitLC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.BalanceDueCreditLC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.BalanceDueDebitSC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.BalanceDueCreditSC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.TaxBaseAmountLC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.TaxBaseAmountSC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.VATAmountLC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.VATAmountSC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.WithholdingTaxAmountLC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.WithholdingTaxAmountSC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.AppliedWTaxAmountLC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.AppliedWTaxAmountSC = new Number();
SAPB1.FinancialAnalysisQuery.prototype.id__ = new Number();



SAPB1.FinancialAnalysisQuery.create = function (rawObject) {
    var instance = new SAPB1.FinancialAnalysisQuery();
    for (var prop in rawObject) {
        if (rawObject.hasOwnProperty(prop)) {
            if (SAPB1.FinancialAnalysisQuery.prototype.hasOwnProperty(prop)) {
                if (instance[prop] instanceof SAPB1.Collection) {
                    var collectionInstance = instance[prop].constructor.create(rawObject[prop]);
                    instance[prop] = collectionInstance;
                } else if (instance[prop] instanceof SAPB1.ComplexType) {
                    var complexInstance = instance[prop].constructor.create(rawObject[prop]);
                    instance[prop] = complexInstance;
                }
                else {
                    instance[prop] = rawObject[prop];
                }
            }
        }
    }
    return instance;
}


module.exports = SAPB1.FinancialAnalysisQuery;
