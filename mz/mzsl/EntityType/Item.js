var ItemPrice = require('ComplexType/ItemPrice')
var ItemPriceCollection = require('ComplexType/ItemPriceCollection')
var ItemWarehouseInfo = require('ComplexType/ItemWarehouseInfo')
var ItemWarehouseInfoCollection = require('ComplexType/ItemWarehouseInfoCollection')
var ItemPreferredVendor = require('ComplexType/ItemPreferredVendor')
var ItemPreferredVendorCollection = require('ComplexType/ItemPreferredVendorCollection')
var ItemLocalizationInfo = require('ComplexType/ItemLocalizationInfo')
var ItemLocalizationInfoCollection = require('ComplexType/ItemLocalizationInfoCollection')
var ItemProject = require('ComplexType/ItemProject')
var ItemProjectCollection = require('ComplexType/ItemProjectCollection')
var ItemDistributionRule = require('ComplexType/ItemDistributionRule')
var ItemDistributionRuleCollection = require('ComplexType/ItemDistributionRuleCollection')
var ItemAttributeGroups = require('ComplexType/ItemAttributeGroups')
var ItemAttributeGroupsCollection = require('ComplexType/ItemAttributeGroupsCollection')
var ItemDepreciationParameter = require('ComplexType/ItemDepreciationParameter')
var ItemDepreciationParameterCollection = require('ComplexType/ItemDepreciationParameterCollection')
var ItemPeriodControl = require('ComplexType/ItemPeriodControl')
var ItemPeriodControlCollection = require('ComplexType/ItemPeriodControlCollection')
var ItemUnitOfMeasurement = require('ComplexType/ItemUnitOfMeasurement')
var ItemUnitOfMeasurementCollection = require('ComplexType/ItemUnitOfMeasurementCollection')
var ItemBarCode = require('ComplexType/ItemBarCode')
var ItemBarCodeCollection = require('ComplexType/ItemBarCodeCollection')
var ItemIntrastatExtension = require('ComplexType/ItemIntrastatExtension')

var BoYesNoEnum = require('EnumType/BoYesNoEnum')
var BoItemTreeTypes = require('EnumType/BoItemTreeTypes')
var BoGLMethods = require('EnumType/BoGLMethods')
var BoTaxTypes = require('EnumType/BoTaxTypes')
var BoInventorySystem = require('EnumType/BoInventorySystem')
var BoIssueMethod = require('EnumType/BoIssueMethod')
var BoManageMethod = require('EnumType/BoManageMethod')
var BoPlanningSystem = require('EnumType/BoPlanningSystem')
var BoProcurementMethod = require('EnumType/BoProcurementMethod')
var BoMRPComponentWarehouse = require('EnumType/BoMRPComponentWarehouse')
var ItemTypeEnum = require('EnumType/ItemTypeEnum')
var ItemClassEnum = require('EnumType/ItemClassEnum')
var BoMaterialTypes = require('EnumType/BoMaterialTypes')
var TypeOfAdvancedRulesEnum = require('EnumType/TypeOfAdvancedRulesEnum')
var IssuePrimarilyByEnum = require('EnumType/IssuePrimarilyByEnum')
var AssetStatusEnum = require('EnumType/AssetStatusEnum')
var SpecialProductTypeEnum = require('EnumType/SpecialProductTypeEnum')
var GSTTaxCategoryEnum = require('EnumType/GSTTaxCategoryEnum')
var SOIExcisableTypeEnum = require('EnumType/SOIExcisableTypeEnum')

var ServiceLayerModule = require('Base/ServiceLayerModule.js');

//workaround the possible intellisense bug of VS
if (typeof (SAPB1) === "undefined") {
    SAPB1 = {};
}

SAPB1.Item = function () {
}
SAPB1.Item.prototype = new SAPB1.EntityType();
SAPB1.Item.prototype.constructor = SAPB1.Item;
SAPB1.Item.prototype.keys.push('ItemCode');
SAPB1.Item.ItemCode = { valueOf: function(){return 'ItemCode';}, Type: 'Edm.String', Index: 0, Nullable: false, IsArray: false, IsComplex: false };
SAPB1.Item.ItemName = { valueOf: function(){return 'ItemName';}, Type: 'Edm.String', Index: 1, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ForeignName = { valueOf: function(){return 'ForeignName';}, Type: 'Edm.String', Index: 2, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ItemsGroupCode = { valueOf: function(){return 'ItemsGroupCode';}, Type: 'Edm.Int32', Index: 3, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CustomsGroupCode = { valueOf: function(){return 'CustomsGroupCode';}, Type: 'Edm.Int32', Index: 4, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesVATGroup = { valueOf: function(){return 'SalesVATGroup';}, Type: 'Edm.String', Index: 5, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.BarCode = { valueOf: function(){return 'BarCode';}, Type: 'Edm.String', Index: 6, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.VatLiable = { valueOf: function(){return 'VatLiable';}, Type: 'BoYesNoEnum', Index: 7, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseItem = { valueOf: function(){return 'PurchaseItem';}, Type: 'BoYesNoEnum', Index: 8, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesItem = { valueOf: function(){return 'SalesItem';}, Type: 'BoYesNoEnum', Index: 9, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.InventoryItem = { valueOf: function(){return 'InventoryItem';}, Type: 'BoYesNoEnum', Index: 10, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.IncomeAccount = { valueOf: function(){return 'IncomeAccount';}, Type: 'Edm.String', Index: 11, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ExemptIncomeAccount = { valueOf: function(){return 'ExemptIncomeAccount';}, Type: 'Edm.String', Index: 12, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ExpanseAccount = { valueOf: function(){return 'ExpanseAccount';}, Type: 'Edm.String', Index: 13, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Mainsupplier = { valueOf: function(){return 'Mainsupplier';}, Type: 'Edm.String', Index: 14, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SupplierCatalogNo = { valueOf: function(){return 'SupplierCatalogNo';}, Type: 'Edm.String', Index: 15, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DesiredInventory = { valueOf: function(){return 'DesiredInventory';}, Type: 'Edm.Double', Index: 16, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.MinInventory = { valueOf: function(){return 'MinInventory';}, Type: 'Edm.Double', Index: 17, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Picture = { valueOf: function(){return 'Picture';}, Type: 'Edm.String', Index: 18, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.User_Text = { valueOf: function(){return 'User_Text';}, Type: 'Edm.String', Index: 19, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SerialNum = { valueOf: function(){return 'SerialNum';}, Type: 'Edm.String', Index: 20, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CommissionPercent = { valueOf: function(){return 'CommissionPercent';}, Type: 'Edm.Double', Index: 21, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CommissionSum = { valueOf: function(){return 'CommissionSum';}, Type: 'Edm.Double', Index: 22, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CommissionGroup = { valueOf: function(){return 'CommissionGroup';}, Type: 'Edm.Int32', Index: 23, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.TreeType = { valueOf: function(){return 'TreeType';}, Type: 'BoItemTreeTypes', Index: 24, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AssetItem = { valueOf: function(){return 'AssetItem';}, Type: 'BoYesNoEnum', Index: 25, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DataExportCode = { valueOf: function(){return 'DataExportCode';}, Type: 'Edm.String', Index: 26, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Manufacturer = { valueOf: function(){return 'Manufacturer';}, Type: 'Edm.Int32', Index: 27, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.QuantityOnStock = { valueOf: function(){return 'QuantityOnStock';}, Type: 'Edm.Double', Index: 28, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.QuantityOrderedFromVendors = { valueOf: function(){return 'QuantityOrderedFromVendors';}, Type: 'Edm.Double', Index: 29, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.QuantityOrderedByCustomers = { valueOf: function(){return 'QuantityOrderedByCustomers';}, Type: 'Edm.Double', Index: 30, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ManageSerialNumbers = { valueOf: function(){return 'ManageSerialNumbers';}, Type: 'BoYesNoEnum', Index: 31, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ManageBatchNumbers = { valueOf: function(){return 'ManageBatchNumbers';}, Type: 'BoYesNoEnum', Index: 32, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Valid = { valueOf: function(){return 'Valid';}, Type: 'BoYesNoEnum', Index: 33, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ValidFrom = { valueOf: function(){return 'ValidFrom';}, Type: 'Edm.DateTime', Index: 34, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ValidTo = { valueOf: function(){return 'ValidTo';}, Type: 'Edm.DateTime', Index: 35, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ValidRemarks = { valueOf: function(){return 'ValidRemarks';}, Type: 'Edm.String', Index: 36, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Frozen = { valueOf: function(){return 'Frozen';}, Type: 'BoYesNoEnum', Index: 37, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.FrozenFrom = { valueOf: function(){return 'FrozenFrom';}, Type: 'Edm.DateTime', Index: 38, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.FrozenTo = { valueOf: function(){return 'FrozenTo';}, Type: 'Edm.DateTime', Index: 39, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.FrozenRemarks = { valueOf: function(){return 'FrozenRemarks';}, Type: 'Edm.String', Index: 40, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnit = { valueOf: function(){return 'SalesUnit';}, Type: 'Edm.String', Index: 41, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesItemsPerUnit = { valueOf: function(){return 'SalesItemsPerUnit';}, Type: 'Edm.Double', Index: 42, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesPackagingUnit = { valueOf: function(){return 'SalesPackagingUnit';}, Type: 'Edm.String', Index: 43, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesQtyPerPackUnit = { valueOf: function(){return 'SalesQtyPerPackUnit';}, Type: 'Edm.Double', Index: 44, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnitLength = { valueOf: function(){return 'SalesUnitLength';}, Type: 'Edm.Double', Index: 45, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesLengthUnit = { valueOf: function(){return 'SalesLengthUnit';}, Type: 'Edm.Int32', Index: 46, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnitWidth = { valueOf: function(){return 'SalesUnitWidth';}, Type: 'Edm.Double', Index: 47, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesWidthUnit = { valueOf: function(){return 'SalesWidthUnit';}, Type: 'Edm.Int32', Index: 48, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnitHeight = { valueOf: function(){return 'SalesUnitHeight';}, Type: 'Edm.Double', Index: 49, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesHeightUnit = { valueOf: function(){return 'SalesHeightUnit';}, Type: 'Edm.Int32', Index: 50, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnitVolume = { valueOf: function(){return 'SalesUnitVolume';}, Type: 'Edm.Double', Index: 51, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesVolumeUnit = { valueOf: function(){return 'SalesVolumeUnit';}, Type: 'Edm.Int32', Index: 52, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnitWeight = { valueOf: function(){return 'SalesUnitWeight';}, Type: 'Edm.Double', Index: 53, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesWeightUnit = { valueOf: function(){return 'SalesWeightUnit';}, Type: 'Edm.Int32', Index: 54, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnit = { valueOf: function(){return 'PurchaseUnit';}, Type: 'Edm.String', Index: 55, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseItemsPerUnit = { valueOf: function(){return 'PurchaseItemsPerUnit';}, Type: 'Edm.Double', Index: 56, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchasePackagingUnit = { valueOf: function(){return 'PurchasePackagingUnit';}, Type: 'Edm.String', Index: 57, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseQtyPerPackUnit = { valueOf: function(){return 'PurchaseQtyPerPackUnit';}, Type: 'Edm.Double', Index: 58, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnitLength = { valueOf: function(){return 'PurchaseUnitLength';}, Type: 'Edm.Double', Index: 59, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseLengthUnit = { valueOf: function(){return 'PurchaseLengthUnit';}, Type: 'Edm.Int32', Index: 60, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnitWidth = { valueOf: function(){return 'PurchaseUnitWidth';}, Type: 'Edm.Double', Index: 61, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseWidthUnit = { valueOf: function(){return 'PurchaseWidthUnit';}, Type: 'Edm.Int32', Index: 62, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnitHeight = { valueOf: function(){return 'PurchaseUnitHeight';}, Type: 'Edm.Double', Index: 63, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseHeightUnit = { valueOf: function(){return 'PurchaseHeightUnit';}, Type: 'Edm.Int32', Index: 64, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnitVolume = { valueOf: function(){return 'PurchaseUnitVolume';}, Type: 'Edm.Double', Index: 65, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseVolumeUnit = { valueOf: function(){return 'PurchaseVolumeUnit';}, Type: 'Edm.Int32', Index: 66, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnitWeight = { valueOf: function(){return 'PurchaseUnitWeight';}, Type: 'Edm.Double', Index: 67, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseWeightUnit = { valueOf: function(){return 'PurchaseWeightUnit';}, Type: 'Edm.Int32', Index: 68, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseVATGroup = { valueOf: function(){return 'PurchaseVATGroup';}, Type: 'Edm.String', Index: 69, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesFactor1 = { valueOf: function(){return 'SalesFactor1';}, Type: 'Edm.Double', Index: 70, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesFactor2 = { valueOf: function(){return 'SalesFactor2';}, Type: 'Edm.Double', Index: 71, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesFactor3 = { valueOf: function(){return 'SalesFactor3';}, Type: 'Edm.Double', Index: 72, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesFactor4 = { valueOf: function(){return 'SalesFactor4';}, Type: 'Edm.Double', Index: 73, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseFactor1 = { valueOf: function(){return 'PurchaseFactor1';}, Type: 'Edm.Double', Index: 74, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseFactor2 = { valueOf: function(){return 'PurchaseFactor2';}, Type: 'Edm.Double', Index: 75, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseFactor3 = { valueOf: function(){return 'PurchaseFactor3';}, Type: 'Edm.Double', Index: 76, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseFactor4 = { valueOf: function(){return 'PurchaseFactor4';}, Type: 'Edm.Double', Index: 77, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.MovingAveragePrice = { valueOf: function(){return 'MovingAveragePrice';}, Type: 'Edm.Double', Index: 78, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ForeignRevenuesAccount = { valueOf: function(){return 'ForeignRevenuesAccount';}, Type: 'Edm.String', Index: 79, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ECRevenuesAccount = { valueOf: function(){return 'ECRevenuesAccount';}, Type: 'Edm.String', Index: 80, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ForeignExpensesAccount = { valueOf: function(){return 'ForeignExpensesAccount';}, Type: 'Edm.String', Index: 81, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ECExpensesAccount = { valueOf: function(){return 'ECExpensesAccount';}, Type: 'Edm.String', Index: 82, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AvgStdPrice = { valueOf: function(){return 'AvgStdPrice';}, Type: 'Edm.Double', Index: 83, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DefaultWarehouse = { valueOf: function(){return 'DefaultWarehouse';}, Type: 'Edm.String', Index: 84, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ShipType = { valueOf: function(){return 'ShipType';}, Type: 'Edm.Int32', Index: 85, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.GLMethod = { valueOf: function(){return 'GLMethod';}, Type: 'BoGLMethods', Index: 86, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.TaxType = { valueOf: function(){return 'TaxType';}, Type: 'BoTaxTypes', Index: 87, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.MaxInventory = { valueOf: function(){return 'MaxInventory';}, Type: 'Edm.Double', Index: 88, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ManageStockByWarehouse = { valueOf: function(){return 'ManageStockByWarehouse';}, Type: 'BoYesNoEnum', Index: 89, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseHeightUnit1 = { valueOf: function(){return 'PurchaseHeightUnit1';}, Type: 'Edm.Int32', Index: 90, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnitHeight1 = { valueOf: function(){return 'PurchaseUnitHeight1';}, Type: 'Edm.Double', Index: 91, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseLengthUnit1 = { valueOf: function(){return 'PurchaseLengthUnit1';}, Type: 'Edm.Int32', Index: 92, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnitLength1 = { valueOf: function(){return 'PurchaseUnitLength1';}, Type: 'Edm.Double', Index: 93, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseWeightUnit1 = { valueOf: function(){return 'PurchaseWeightUnit1';}, Type: 'Edm.Int32', Index: 94, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnitWeight1 = { valueOf: function(){return 'PurchaseUnitWeight1';}, Type: 'Edm.Double', Index: 95, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseWidthUnit1 = { valueOf: function(){return 'PurchaseWidthUnit1';}, Type: 'Edm.Int32', Index: 96, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PurchaseUnitWidth1 = { valueOf: function(){return 'PurchaseUnitWidth1';}, Type: 'Edm.Double', Index: 97, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesHeightUnit1 = { valueOf: function(){return 'SalesHeightUnit1';}, Type: 'Edm.Int32', Index: 98, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnitHeight1 = { valueOf: function(){return 'SalesUnitHeight1';}, Type: 'Edm.Double', Index: 99, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesLengthUnit1 = { valueOf: function(){return 'SalesLengthUnit1';}, Type: 'Edm.Int32', Index: 100, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnitLength1 = { valueOf: function(){return 'SalesUnitLength1';}, Type: 'Edm.Double', Index: 101, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesWeightUnit1 = { valueOf: function(){return 'SalesWeightUnit1';}, Type: 'Edm.Int32', Index: 102, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnitWeight1 = { valueOf: function(){return 'SalesUnitWeight1';}, Type: 'Edm.Double', Index: 103, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesWidthUnit1 = { valueOf: function(){return 'SalesWidthUnit1';}, Type: 'Edm.Int32', Index: 104, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SalesUnitWidth1 = { valueOf: function(){return 'SalesUnitWidth1';}, Type: 'Edm.Double', Index: 105, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ForceSelectionOfSerialNumber = { valueOf: function(){return 'ForceSelectionOfSerialNumber';}, Type: 'BoYesNoEnum', Index: 106, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ManageSerialNumbersOnReleaseOnly = { valueOf: function(){return 'ManageSerialNumbersOnReleaseOnly';}, Type: 'BoYesNoEnum', Index: 107, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.WTLiable = { valueOf: function(){return 'WTLiable';}, Type: 'BoYesNoEnum', Index: 108, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CostAccountingMethod = { valueOf: function(){return 'CostAccountingMethod';}, Type: 'BoInventorySystem', Index: 109, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SWW = { valueOf: function(){return 'SWW';}, Type: 'Edm.String', Index: 110, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.WarrantyTemplate = { valueOf: function(){return 'WarrantyTemplate';}, Type: 'Edm.String', Index: 111, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.IndirectTax = { valueOf: function(){return 'IndirectTax';}, Type: 'BoYesNoEnum', Index: 112, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ArTaxCode = { valueOf: function(){return 'ArTaxCode';}, Type: 'Edm.String', Index: 113, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ApTaxCode = { valueOf: function(){return 'ApTaxCode';}, Type: 'Edm.String', Index: 114, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.BaseUnitName = { valueOf: function(){return 'BaseUnitName';}, Type: 'Edm.String', Index: 115, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ItemCountryOrg = { valueOf: function(){return 'ItemCountryOrg';}, Type: 'Edm.String', Index: 116, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.IssueMethod = { valueOf: function(){return 'IssueMethod';}, Type: 'BoIssueMethod', Index: 117, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SRIAndBatchManageMethod = { valueOf: function(){return 'SRIAndBatchManageMethod';}, Type: 'BoManageMethod', Index: 118, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.IsPhantom = { valueOf: function(){return 'IsPhantom';}, Type: 'BoYesNoEnum', Index: 119, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.InventoryUOM = { valueOf: function(){return 'InventoryUOM';}, Type: 'Edm.String', Index: 120, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PlanningSystem = { valueOf: function(){return 'PlanningSystem';}, Type: 'BoPlanningSystem', Index: 121, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ProcurementMethod = { valueOf: function(){return 'ProcurementMethod';}, Type: 'BoProcurementMethod', Index: 122, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ComponentWarehouse = { valueOf: function(){return 'ComponentWarehouse';}, Type: 'BoMRPComponentWarehouse', Index: 123, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.OrderIntervals = { valueOf: function(){return 'OrderIntervals';}, Type: 'Edm.Int32', Index: 124, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.OrderMultiple = { valueOf: function(){return 'OrderMultiple';}, Type: 'Edm.Double', Index: 125, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.LeadTime = { valueOf: function(){return 'LeadTime';}, Type: 'Edm.Int32', Index: 126, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.MinOrderQuantity = { valueOf: function(){return 'MinOrderQuantity';}, Type: 'Edm.Double', Index: 127, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ItemType = { valueOf: function(){return 'ItemType';}, Type: 'ItemTypeEnum', Index: 128, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ItemClass = { valueOf: function(){return 'ItemClass';}, Type: 'ItemClassEnum', Index: 129, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.OutgoingServiceCode = { valueOf: function(){return 'OutgoingServiceCode';}, Type: 'Edm.Int32', Index: 130, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.IncomingServiceCode = { valueOf: function(){return 'IncomingServiceCode';}, Type: 'Edm.Int32', Index: 131, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ServiceGroup = { valueOf: function(){return 'ServiceGroup';}, Type: 'Edm.Int32', Index: 132, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.NCMCode = { valueOf: function(){return 'NCMCode';}, Type: 'Edm.Int32', Index: 133, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.MaterialType = { valueOf: function(){return 'MaterialType';}, Type: 'BoMaterialTypes', Index: 134, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.MaterialGroup = { valueOf: function(){return 'MaterialGroup';}, Type: 'Edm.Int32', Index: 135, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ProductSource = { valueOf: function(){return 'ProductSource';}, Type: 'Edm.String', Index: 136, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties1 = { valueOf: function(){return 'Properties1';}, Type: 'BoYesNoEnum', Index: 137, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties2 = { valueOf: function(){return 'Properties2';}, Type: 'BoYesNoEnum', Index: 138, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties3 = { valueOf: function(){return 'Properties3';}, Type: 'BoYesNoEnum', Index: 139, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties4 = { valueOf: function(){return 'Properties4';}, Type: 'BoYesNoEnum', Index: 140, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties5 = { valueOf: function(){return 'Properties5';}, Type: 'BoYesNoEnum', Index: 141, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties6 = { valueOf: function(){return 'Properties6';}, Type: 'BoYesNoEnum', Index: 142, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties7 = { valueOf: function(){return 'Properties7';}, Type: 'BoYesNoEnum', Index: 143, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties8 = { valueOf: function(){return 'Properties8';}, Type: 'BoYesNoEnum', Index: 144, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties9 = { valueOf: function(){return 'Properties9';}, Type: 'BoYesNoEnum', Index: 145, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties10 = { valueOf: function(){return 'Properties10';}, Type: 'BoYesNoEnum', Index: 146, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties11 = { valueOf: function(){return 'Properties11';}, Type: 'BoYesNoEnum', Index: 147, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties12 = { valueOf: function(){return 'Properties12';}, Type: 'BoYesNoEnum', Index: 148, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties13 = { valueOf: function(){return 'Properties13';}, Type: 'BoYesNoEnum', Index: 149, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties14 = { valueOf: function(){return 'Properties14';}, Type: 'BoYesNoEnum', Index: 150, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties15 = { valueOf: function(){return 'Properties15';}, Type: 'BoYesNoEnum', Index: 151, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties16 = { valueOf: function(){return 'Properties16';}, Type: 'BoYesNoEnum', Index: 152, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties17 = { valueOf: function(){return 'Properties17';}, Type: 'BoYesNoEnum', Index: 153, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties18 = { valueOf: function(){return 'Properties18';}, Type: 'BoYesNoEnum', Index: 154, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties19 = { valueOf: function(){return 'Properties19';}, Type: 'BoYesNoEnum', Index: 155, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties20 = { valueOf: function(){return 'Properties20';}, Type: 'BoYesNoEnum', Index: 156, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties21 = { valueOf: function(){return 'Properties21';}, Type: 'BoYesNoEnum', Index: 157, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties22 = { valueOf: function(){return 'Properties22';}, Type: 'BoYesNoEnum', Index: 158, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties23 = { valueOf: function(){return 'Properties23';}, Type: 'BoYesNoEnum', Index: 159, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties24 = { valueOf: function(){return 'Properties24';}, Type: 'BoYesNoEnum', Index: 160, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties25 = { valueOf: function(){return 'Properties25';}, Type: 'BoYesNoEnum', Index: 161, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties26 = { valueOf: function(){return 'Properties26';}, Type: 'BoYesNoEnum', Index: 162, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties27 = { valueOf: function(){return 'Properties27';}, Type: 'BoYesNoEnum', Index: 163, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties28 = { valueOf: function(){return 'Properties28';}, Type: 'BoYesNoEnum', Index: 164, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties29 = { valueOf: function(){return 'Properties29';}, Type: 'BoYesNoEnum', Index: 165, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties30 = { valueOf: function(){return 'Properties30';}, Type: 'BoYesNoEnum', Index: 166, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties31 = { valueOf: function(){return 'Properties31';}, Type: 'BoYesNoEnum', Index: 167, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties32 = { valueOf: function(){return 'Properties32';}, Type: 'BoYesNoEnum', Index: 168, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties33 = { valueOf: function(){return 'Properties33';}, Type: 'BoYesNoEnum', Index: 169, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties34 = { valueOf: function(){return 'Properties34';}, Type: 'BoYesNoEnum', Index: 170, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties35 = { valueOf: function(){return 'Properties35';}, Type: 'BoYesNoEnum', Index: 171, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties36 = { valueOf: function(){return 'Properties36';}, Type: 'BoYesNoEnum', Index: 172, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties37 = { valueOf: function(){return 'Properties37';}, Type: 'BoYesNoEnum', Index: 173, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties38 = { valueOf: function(){return 'Properties38';}, Type: 'BoYesNoEnum', Index: 174, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties39 = { valueOf: function(){return 'Properties39';}, Type: 'BoYesNoEnum', Index: 175, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties40 = { valueOf: function(){return 'Properties40';}, Type: 'BoYesNoEnum', Index: 176, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties41 = { valueOf: function(){return 'Properties41';}, Type: 'BoYesNoEnum', Index: 177, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties42 = { valueOf: function(){return 'Properties42';}, Type: 'BoYesNoEnum', Index: 178, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties43 = { valueOf: function(){return 'Properties43';}, Type: 'BoYesNoEnum', Index: 179, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties44 = { valueOf: function(){return 'Properties44';}, Type: 'BoYesNoEnum', Index: 180, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties45 = { valueOf: function(){return 'Properties45';}, Type: 'BoYesNoEnum', Index: 181, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties46 = { valueOf: function(){return 'Properties46';}, Type: 'BoYesNoEnum', Index: 182, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties47 = { valueOf: function(){return 'Properties47';}, Type: 'BoYesNoEnum', Index: 183, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties48 = { valueOf: function(){return 'Properties48';}, Type: 'BoYesNoEnum', Index: 184, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties49 = { valueOf: function(){return 'Properties49';}, Type: 'BoYesNoEnum', Index: 185, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties50 = { valueOf: function(){return 'Properties50';}, Type: 'BoYesNoEnum', Index: 186, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties51 = { valueOf: function(){return 'Properties51';}, Type: 'BoYesNoEnum', Index: 187, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties52 = { valueOf: function(){return 'Properties52';}, Type: 'BoYesNoEnum', Index: 188, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties53 = { valueOf: function(){return 'Properties53';}, Type: 'BoYesNoEnum', Index: 189, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties54 = { valueOf: function(){return 'Properties54';}, Type: 'BoYesNoEnum', Index: 190, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties55 = { valueOf: function(){return 'Properties55';}, Type: 'BoYesNoEnum', Index: 191, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties56 = { valueOf: function(){return 'Properties56';}, Type: 'BoYesNoEnum', Index: 192, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties57 = { valueOf: function(){return 'Properties57';}, Type: 'BoYesNoEnum', Index: 193, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties58 = { valueOf: function(){return 'Properties58';}, Type: 'BoYesNoEnum', Index: 194, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties59 = { valueOf: function(){return 'Properties59';}, Type: 'BoYesNoEnum', Index: 195, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties60 = { valueOf: function(){return 'Properties60';}, Type: 'BoYesNoEnum', Index: 196, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties61 = { valueOf: function(){return 'Properties61';}, Type: 'BoYesNoEnum', Index: 197, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties62 = { valueOf: function(){return 'Properties62';}, Type: 'BoYesNoEnum', Index: 198, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties63 = { valueOf: function(){return 'Properties63';}, Type: 'BoYesNoEnum', Index: 199, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Properties64 = { valueOf: function(){return 'Properties64';}, Type: 'BoYesNoEnum', Index: 200, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AutoCreateSerialNumbersOnRelease = { valueOf: function(){return 'AutoCreateSerialNumbersOnRelease';}, Type: 'BoYesNoEnum', Index: 201, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DNFEntry = { valueOf: function(){return 'DNFEntry';}, Type: 'Edm.Int32', Index: 202, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.GTSItemSpec = { valueOf: function(){return 'GTSItemSpec';}, Type: 'Edm.String', Index: 203, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.GTSItemTaxCategory = { valueOf: function(){return 'GTSItemTaxCategory';}, Type: 'Edm.String', Index: 204, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.FuelID = { valueOf: function(){return 'FuelID';}, Type: 'Edm.Int32', Index: 205, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.BeverageTableCode = { valueOf: function(){return 'BeverageTableCode';}, Type: 'Edm.String', Index: 206, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.BeverageGroupCode = { valueOf: function(){return 'BeverageGroupCode';}, Type: 'Edm.String', Index: 207, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.BeverageCommercialBrandCode = { valueOf: function(){return 'BeverageCommercialBrandCode';}, Type: 'Edm.Int32', Index: 208, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Series = { valueOf: function(){return 'Series';}, Type: 'Edm.Int32', Index: 209, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ToleranceDays = { valueOf: function(){return 'ToleranceDays';}, Type: 'Edm.Int32', Index: 210, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.TypeOfAdvancedRules = { valueOf: function(){return 'TypeOfAdvancedRules';}, Type: 'TypeOfAdvancedRulesEnum', Index: 211, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.IssuePrimarilyBy = { valueOf: function(){return 'IssuePrimarilyBy';}, Type: 'IssuePrimarilyByEnum', Index: 212, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.NoDiscounts = { valueOf: function(){return 'NoDiscounts';}, Type: 'BoYesNoEnum', Index: 213, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AssetClass = { valueOf: function(){return 'AssetClass';}, Type: 'Edm.String', Index: 214, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AssetGroup = { valueOf: function(){return 'AssetGroup';}, Type: 'Edm.String', Index: 215, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.InventoryNumber = { valueOf: function(){return 'InventoryNumber';}, Type: 'Edm.String', Index: 216, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Technician = { valueOf: function(){return 'Technician';}, Type: 'Edm.Int32', Index: 217, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Employee = { valueOf: function(){return 'Employee';}, Type: 'Edm.Int32', Index: 218, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Location = { valueOf: function(){return 'Location';}, Type: 'Edm.Int32', Index: 219, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AssetStatus = { valueOf: function(){return 'AssetStatus';}, Type: 'AssetStatusEnum', Index: 220, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CapitalizationDate = { valueOf: function(){return 'CapitalizationDate';}, Type: 'Edm.DateTime', Index: 221, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.StatisticalAsset = { valueOf: function(){return 'StatisticalAsset';}, Type: 'BoYesNoEnum', Index: 222, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Cession = { valueOf: function(){return 'Cession';}, Type: 'BoYesNoEnum', Index: 223, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DeactivateAfterUsefulLife = { valueOf: function(){return 'DeactivateAfterUsefulLife';}, Type: 'BoYesNoEnum', Index: 224, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ManageByQuantity = { valueOf: function(){return 'ManageByQuantity';}, Type: 'BoYesNoEnum', Index: 225, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.UoMGroupEntry = { valueOf: function(){return 'UoMGroupEntry';}, Type: 'Edm.Int32', Index: 226, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.InventoryUoMEntry = { valueOf: function(){return 'InventoryUoMEntry';}, Type: 'Edm.Int32', Index: 227, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DefaultSalesUoMEntry = { valueOf: function(){return 'DefaultSalesUoMEntry';}, Type: 'Edm.Int32', Index: 228, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DefaultPurchasingUoMEntry = { valueOf: function(){return 'DefaultPurchasingUoMEntry';}, Type: 'Edm.Int32', Index: 229, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DepreciationGroup = { valueOf: function(){return 'DepreciationGroup';}, Type: 'Edm.String', Index: 230, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AssetSerialNumber = { valueOf: function(){return 'AssetSerialNumber';}, Type: 'Edm.String', Index: 231, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.InventoryWeight = { valueOf: function(){return 'InventoryWeight';}, Type: 'Edm.Double', Index: 232, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.InventoryWeightUnit = { valueOf: function(){return 'InventoryWeightUnit';}, Type: 'Edm.Int32', Index: 233, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.InventoryWeight1 = { valueOf: function(){return 'InventoryWeight1';}, Type: 'Edm.Double', Index: 234, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.InventoryWeightUnit1 = { valueOf: function(){return 'InventoryWeightUnit1';}, Type: 'Edm.Int32', Index: 235, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DefaultCountingUnit = { valueOf: function(){return 'DefaultCountingUnit';}, Type: 'Edm.String', Index: 236, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CountingItemsPerUnit = { valueOf: function(){return 'CountingItemsPerUnit';}, Type: 'Edm.Double', Index: 237, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.DefaultCountingUoMEntry = { valueOf: function(){return 'DefaultCountingUoMEntry';}, Type: 'Edm.Int32', Index: 238, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.Excisable = { valueOf: function(){return 'Excisable';}, Type: 'BoYesNoEnum', Index: 239, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ChapterID = { valueOf: function(){return 'ChapterID';}, Type: 'Edm.Int32', Index: 240, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ScsCode = { valueOf: function(){return 'ScsCode';}, Type: 'Edm.String', Index: 241, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SpProdType = { valueOf: function(){return 'SpProdType';}, Type: 'SpecialProductTypeEnum', Index: 242, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ProdStdCost = { valueOf: function(){return 'ProdStdCost';}, Type: 'Edm.Double', Index: 243, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.InCostRollup = { valueOf: function(){return 'InCostRollup';}, Type: 'BoYesNoEnum', Index: 244, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.VirtualAssetItem = { valueOf: function(){return 'VirtualAssetItem';}, Type: 'BoYesNoEnum', Index: 245, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.EnforceAssetSerialNumbers = { valueOf: function(){return 'EnforceAssetSerialNumbers';}, Type: 'BoYesNoEnum', Index: 246, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AttachmentEntry = { valueOf: function(){return 'AttachmentEntry';}, Type: 'Edm.Int32', Index: 247, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.LinkedResource = { valueOf: function(){return 'LinkedResource';}, Type: 'Edm.String', Index: 248, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.UpdateDate = { valueOf: function(){return 'UpdateDate';}, Type: 'Edm.DateTime', Index: 249, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.UpdateTime = { valueOf: function(){return 'UpdateTime';}, Type: 'Edm.Time', Index: 250, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.GSTRelevnt = { valueOf: function(){return 'GSTRelevnt';}, Type: 'BoYesNoEnum', Index: 251, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SACEntry = { valueOf: function(){return 'SACEntry';}, Type: 'Edm.Int32', Index: 252, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.GSTTaxCategory = { valueOf: function(){return 'GSTTaxCategory';}, Type: 'GSTTaxCategoryEnum', Index: 253, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ServiceCategoryEntry = { valueOf: function(){return 'ServiceCategoryEntry';}, Type: 'Edm.Int32', Index: 254, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CapitalGoodsOnHoldPercent = { valueOf: function(){return 'CapitalGoodsOnHoldPercent';}, Type: 'Edm.Double', Index: 255, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CapitalGoodsOnHoldLimit = { valueOf: function(){return 'CapitalGoodsOnHoldLimit';}, Type: 'Edm.Double', Index: 256, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AssessableValue = { valueOf: function(){return 'AssessableValue';}, Type: 'Edm.Double', Index: 257, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.AssVal4WTR = { valueOf: function(){return 'AssVal4WTR';}, Type: 'Edm.Double', Index: 258, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.SOIExcisable = { valueOf: function(){return 'SOIExcisable';}, Type: 'SOIExcisableTypeEnum', Index: 259, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.TNVED = { valueOf: function(){return 'TNVED';}, Type: 'Edm.String', Index: 260, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ImportedItem = { valueOf: function(){return 'ImportedItem';}, Type: 'BoYesNoEnum', Index: 261, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.PricingUnit = { valueOf: function(){return 'PricingUnit';}, Type: 'Edm.Int32', Index: 262, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CreateDate = { valueOf: function(){return 'CreateDate';}, Type: 'Edm.DateTime', Index: 263, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.CreateTime = { valueOf: function(){return 'CreateTime';}, Type: 'Edm.Time', Index: 264, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.U_Class2 = { valueOf: function(){return 'U_Class2';}, Type: 'Edm.String', Index: 265, Nullable: true, IsArray: false, IsComplex: false };
SAPB1.Item.ItemPrices = { valueOf: function(){return 'ItemPrices';}, Type: 'ItemPrice', Index: 266, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemWarehouseInfoCollection = { valueOf: function(){return 'ItemWarehouseInfoCollection';}, Type: 'ItemWarehouseInfo', Index: 267, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemPreferredVendors = { valueOf: function(){return 'ItemPreferredVendors';}, Type: 'ItemPreferredVendor', Index: 268, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemLocalizationInfos = { valueOf: function(){return 'ItemLocalizationInfos';}, Type: 'ItemLocalizationInfo', Index: 269, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemProjects = { valueOf: function(){return 'ItemProjects';}, Type: 'ItemProject', Index: 270, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemDistributionRules = { valueOf: function(){return 'ItemDistributionRules';}, Type: 'ItemDistributionRule', Index: 271, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemAttributeGroups = { valueOf: function(){return 'ItemAttributeGroups';}, Type: 'ItemAttributeGroups', Index: 272, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemDepreciationParameters = { valueOf: function(){return 'ItemDepreciationParameters';}, Type: 'ItemDepreciationParameter', Index: 273, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemPeriodControls = { valueOf: function(){return 'ItemPeriodControls';}, Type: 'ItemPeriodControl', Index: 274, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemUnitOfMeasurementCollection = { valueOf: function(){return 'ItemUnitOfMeasurementCollection';}, Type: 'ItemUnitOfMeasurement', Index: 275, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemBarCodeCollection = { valueOf: function(){return 'ItemBarCodeCollection';}, Type: 'ItemBarCode', Index: 276, Nullable: true, IsArray: true, IsComplex: true };
SAPB1.Item.ItemIntrastatExtension = { valueOf: function(){return 'ItemIntrastatExtension';}, Type: 'ItemIntrastatExtension', Index: 277, Nullable: true, IsArray: false, IsComplex: true };
SAPB1.Item.prototype.ItemCode = new String();
SAPB1.Item.prototype.ItemName = new String();
SAPB1.Item.prototype.ForeignName = new String();
SAPB1.Item.prototype.ItemsGroupCode = new Number();
SAPB1.Item.prototype.CustomsGroupCode = new Number();
SAPB1.Item.prototype.SalesVATGroup = new String();
SAPB1.Item.prototype.BarCode = new String();
SAPB1.Item.prototype.VatLiable = new String();
SAPB1.Item.prototype.PurchaseItem = new String();
SAPB1.Item.prototype.SalesItem = new String();
SAPB1.Item.prototype.InventoryItem = new String();
SAPB1.Item.prototype.IncomeAccount = new String();
SAPB1.Item.prototype.ExemptIncomeAccount = new String();
SAPB1.Item.prototype.ExpanseAccount = new String();
SAPB1.Item.prototype.Mainsupplier = new String();
SAPB1.Item.prototype.SupplierCatalogNo = new String();
SAPB1.Item.prototype.DesiredInventory = new Number();
SAPB1.Item.prototype.MinInventory = new Number();
SAPB1.Item.prototype.Picture = new String();
SAPB1.Item.prototype.User_Text = new String();
SAPB1.Item.prototype.SerialNum = new String();
SAPB1.Item.prototype.CommissionPercent = new Number();
SAPB1.Item.prototype.CommissionSum = new Number();
SAPB1.Item.prototype.CommissionGroup = new Number();
SAPB1.Item.prototype.TreeType = new String();
SAPB1.Item.prototype.AssetItem = new String();
SAPB1.Item.prototype.DataExportCode = new String();
SAPB1.Item.prototype.Manufacturer = new Number();
SAPB1.Item.prototype.QuantityOnStock = new Number();
SAPB1.Item.prototype.QuantityOrderedFromVendors = new Number();
SAPB1.Item.prototype.QuantityOrderedByCustomers = new Number();
SAPB1.Item.prototype.ManageSerialNumbers = new String();
SAPB1.Item.prototype.ManageBatchNumbers = new String();
SAPB1.Item.prototype.Valid = new String();
SAPB1.Item.prototype.ValidFrom = new String();
SAPB1.Item.prototype.ValidTo = new String();
SAPB1.Item.prototype.ValidRemarks = new String();
SAPB1.Item.prototype.Frozen = new String();
SAPB1.Item.prototype.FrozenFrom = new String();
SAPB1.Item.prototype.FrozenTo = new String();
SAPB1.Item.prototype.FrozenRemarks = new String();
SAPB1.Item.prototype.SalesUnit = new String();
SAPB1.Item.prototype.SalesItemsPerUnit = new Number();
SAPB1.Item.prototype.SalesPackagingUnit = new String();
SAPB1.Item.prototype.SalesQtyPerPackUnit = new Number();
SAPB1.Item.prototype.SalesUnitLength = new Number();
SAPB1.Item.prototype.SalesLengthUnit = new Number();
SAPB1.Item.prototype.SalesUnitWidth = new Number();
SAPB1.Item.prototype.SalesWidthUnit = new Number();
SAPB1.Item.prototype.SalesUnitHeight = new Number();
SAPB1.Item.prototype.SalesHeightUnit = new Number();
SAPB1.Item.prototype.SalesUnitVolume = new Number();
SAPB1.Item.prototype.SalesVolumeUnit = new Number();
SAPB1.Item.prototype.SalesUnitWeight = new Number();
SAPB1.Item.prototype.SalesWeightUnit = new Number();
SAPB1.Item.prototype.PurchaseUnit = new String();
SAPB1.Item.prototype.PurchaseItemsPerUnit = new Number();
SAPB1.Item.prototype.PurchasePackagingUnit = new String();
SAPB1.Item.prototype.PurchaseQtyPerPackUnit = new Number();
SAPB1.Item.prototype.PurchaseUnitLength = new Number();
SAPB1.Item.prototype.PurchaseLengthUnit = new Number();
SAPB1.Item.prototype.PurchaseUnitWidth = new Number();
SAPB1.Item.prototype.PurchaseWidthUnit = new Number();
SAPB1.Item.prototype.PurchaseUnitHeight = new Number();
SAPB1.Item.prototype.PurchaseHeightUnit = new Number();
SAPB1.Item.prototype.PurchaseUnitVolume = new Number();
SAPB1.Item.prototype.PurchaseVolumeUnit = new Number();
SAPB1.Item.prototype.PurchaseUnitWeight = new Number();
SAPB1.Item.prototype.PurchaseWeightUnit = new Number();
SAPB1.Item.prototype.PurchaseVATGroup = new String();
SAPB1.Item.prototype.SalesFactor1 = new Number();
SAPB1.Item.prototype.SalesFactor2 = new Number();
SAPB1.Item.prototype.SalesFactor3 = new Number();
SAPB1.Item.prototype.SalesFactor4 = new Number();
SAPB1.Item.prototype.PurchaseFactor1 = new Number();
SAPB1.Item.prototype.PurchaseFactor2 = new Number();
SAPB1.Item.prototype.PurchaseFactor3 = new Number();
SAPB1.Item.prototype.PurchaseFactor4 = new Number();
SAPB1.Item.prototype.MovingAveragePrice = new Number();
SAPB1.Item.prototype.ForeignRevenuesAccount = new String();
SAPB1.Item.prototype.ECRevenuesAccount = new String();
SAPB1.Item.prototype.ForeignExpensesAccount = new String();
SAPB1.Item.prototype.ECExpensesAccount = new String();
SAPB1.Item.prototype.AvgStdPrice = new Number();
SAPB1.Item.prototype.DefaultWarehouse = new String();
SAPB1.Item.prototype.ShipType = new Number();
SAPB1.Item.prototype.GLMethod = new String();
SAPB1.Item.prototype.TaxType = new String();
SAPB1.Item.prototype.MaxInventory = new Number();
SAPB1.Item.prototype.ManageStockByWarehouse = new String();
SAPB1.Item.prototype.PurchaseHeightUnit1 = new Number();
SAPB1.Item.prototype.PurchaseUnitHeight1 = new Number();
SAPB1.Item.prototype.PurchaseLengthUnit1 = new Number();
SAPB1.Item.prototype.PurchaseUnitLength1 = new Number();
SAPB1.Item.prototype.PurchaseWeightUnit1 = new Number();
SAPB1.Item.prototype.PurchaseUnitWeight1 = new Number();
SAPB1.Item.prototype.PurchaseWidthUnit1 = new Number();
SAPB1.Item.prototype.PurchaseUnitWidth1 = new Number();
SAPB1.Item.prototype.SalesHeightUnit1 = new Number();
SAPB1.Item.prototype.SalesUnitHeight1 = new Number();
SAPB1.Item.prototype.SalesLengthUnit1 = new Number();
SAPB1.Item.prototype.SalesUnitLength1 = new Number();
SAPB1.Item.prototype.SalesWeightUnit1 = new Number();
SAPB1.Item.prototype.SalesUnitWeight1 = new Number();
SAPB1.Item.prototype.SalesWidthUnit1 = new Number();
SAPB1.Item.prototype.SalesUnitWidth1 = new Number();
SAPB1.Item.prototype.ForceSelectionOfSerialNumber = new String();
SAPB1.Item.prototype.ManageSerialNumbersOnReleaseOnly = new String();
SAPB1.Item.prototype.WTLiable = new String();
SAPB1.Item.prototype.CostAccountingMethod = new String();
SAPB1.Item.prototype.SWW = new String();
SAPB1.Item.prototype.WarrantyTemplate = new String();
SAPB1.Item.prototype.IndirectTax = new String();
SAPB1.Item.prototype.ArTaxCode = new String();
SAPB1.Item.prototype.ApTaxCode = new String();
SAPB1.Item.prototype.BaseUnitName = new String();
SAPB1.Item.prototype.ItemCountryOrg = new String();
SAPB1.Item.prototype.IssueMethod = new String();
SAPB1.Item.prototype.SRIAndBatchManageMethod = new String();
SAPB1.Item.prototype.IsPhantom = new String();
SAPB1.Item.prototype.InventoryUOM = new String();
SAPB1.Item.prototype.PlanningSystem = new String();
SAPB1.Item.prototype.ProcurementMethod = new String();
SAPB1.Item.prototype.ComponentWarehouse = new String();
SAPB1.Item.prototype.OrderIntervals = new Number();
SAPB1.Item.prototype.OrderMultiple = new Number();
SAPB1.Item.prototype.LeadTime = new Number();
SAPB1.Item.prototype.MinOrderQuantity = new Number();
SAPB1.Item.prototype.ItemType = new String();
SAPB1.Item.prototype.ItemClass = new String();
SAPB1.Item.prototype.OutgoingServiceCode = new Number();
SAPB1.Item.prototype.IncomingServiceCode = new Number();
SAPB1.Item.prototype.ServiceGroup = new Number();
SAPB1.Item.prototype.NCMCode = new Number();
SAPB1.Item.prototype.MaterialType = new String();
SAPB1.Item.prototype.MaterialGroup = new Number();
SAPB1.Item.prototype.ProductSource = new String();
SAPB1.Item.prototype.Properties1 = new String();
SAPB1.Item.prototype.Properties2 = new String();
SAPB1.Item.prototype.Properties3 = new String();
SAPB1.Item.prototype.Properties4 = new String();
SAPB1.Item.prototype.Properties5 = new String();
SAPB1.Item.prototype.Properties6 = new String();
SAPB1.Item.prototype.Properties7 = new String();
SAPB1.Item.prototype.Properties8 = new String();
SAPB1.Item.prototype.Properties9 = new String();
SAPB1.Item.prototype.Properties10 = new String();
SAPB1.Item.prototype.Properties11 = new String();
SAPB1.Item.prototype.Properties12 = new String();
SAPB1.Item.prototype.Properties13 = new String();
SAPB1.Item.prototype.Properties14 = new String();
SAPB1.Item.prototype.Properties15 = new String();
SAPB1.Item.prototype.Properties16 = new String();
SAPB1.Item.prototype.Properties17 = new String();
SAPB1.Item.prototype.Properties18 = new String();
SAPB1.Item.prototype.Properties19 = new String();
SAPB1.Item.prototype.Properties20 = new String();
SAPB1.Item.prototype.Properties21 = new String();
SAPB1.Item.prototype.Properties22 = new String();
SAPB1.Item.prototype.Properties23 = new String();
SAPB1.Item.prototype.Properties24 = new String();
SAPB1.Item.prototype.Properties25 = new String();
SAPB1.Item.prototype.Properties26 = new String();
SAPB1.Item.prototype.Properties27 = new String();
SAPB1.Item.prototype.Properties28 = new String();
SAPB1.Item.prototype.Properties29 = new String();
SAPB1.Item.prototype.Properties30 = new String();
SAPB1.Item.prototype.Properties31 = new String();
SAPB1.Item.prototype.Properties32 = new String();
SAPB1.Item.prototype.Properties33 = new String();
SAPB1.Item.prototype.Properties34 = new String();
SAPB1.Item.prototype.Properties35 = new String();
SAPB1.Item.prototype.Properties36 = new String();
SAPB1.Item.prototype.Properties37 = new String();
SAPB1.Item.prototype.Properties38 = new String();
SAPB1.Item.prototype.Properties39 = new String();
SAPB1.Item.prototype.Properties40 = new String();
SAPB1.Item.prototype.Properties41 = new String();
SAPB1.Item.prototype.Properties42 = new String();
SAPB1.Item.prototype.Properties43 = new String();
SAPB1.Item.prototype.Properties44 = new String();
SAPB1.Item.prototype.Properties45 = new String();
SAPB1.Item.prototype.Properties46 = new String();
SAPB1.Item.prototype.Properties47 = new String();
SAPB1.Item.prototype.Properties48 = new String();
SAPB1.Item.prototype.Properties49 = new String();
SAPB1.Item.prototype.Properties50 = new String();
SAPB1.Item.prototype.Properties51 = new String();
SAPB1.Item.prototype.Properties52 = new String();
SAPB1.Item.prototype.Properties53 = new String();
SAPB1.Item.prototype.Properties54 = new String();
SAPB1.Item.prototype.Properties55 = new String();
SAPB1.Item.prototype.Properties56 = new String();
SAPB1.Item.prototype.Properties57 = new String();
SAPB1.Item.prototype.Properties58 = new String();
SAPB1.Item.prototype.Properties59 = new String();
SAPB1.Item.prototype.Properties60 = new String();
SAPB1.Item.prototype.Properties61 = new String();
SAPB1.Item.prototype.Properties62 = new String();
SAPB1.Item.prototype.Properties63 = new String();
SAPB1.Item.prototype.Properties64 = new String();
SAPB1.Item.prototype.AutoCreateSerialNumbersOnRelease = new String();
SAPB1.Item.prototype.DNFEntry = new Number();
SAPB1.Item.prototype.GTSItemSpec = new String();
SAPB1.Item.prototype.GTSItemTaxCategory = new String();
SAPB1.Item.prototype.FuelID = new Number();
SAPB1.Item.prototype.BeverageTableCode = new String();
SAPB1.Item.prototype.BeverageGroupCode = new String();
SAPB1.Item.prototype.BeverageCommercialBrandCode = new Number();
SAPB1.Item.prototype.Series = new Number();
SAPB1.Item.prototype.ToleranceDays = new Number();
SAPB1.Item.prototype.TypeOfAdvancedRules = new String();
SAPB1.Item.prototype.IssuePrimarilyBy = new String();
SAPB1.Item.prototype.NoDiscounts = new String();
SAPB1.Item.prototype.AssetClass = new String();
SAPB1.Item.prototype.AssetGroup = new String();
SAPB1.Item.prototype.InventoryNumber = new String();
SAPB1.Item.prototype.Technician = new Number();
SAPB1.Item.prototype.Employee = new Number();
SAPB1.Item.prototype.Location = new Number();
SAPB1.Item.prototype.AssetStatus = new String();
SAPB1.Item.prototype.CapitalizationDate = new String();
SAPB1.Item.prototype.StatisticalAsset = new String();
SAPB1.Item.prototype.Cession = new String();
SAPB1.Item.prototype.DeactivateAfterUsefulLife = new String();
SAPB1.Item.prototype.ManageByQuantity = new String();
SAPB1.Item.prototype.UoMGroupEntry = new Number();
SAPB1.Item.prototype.InventoryUoMEntry = new Number();
SAPB1.Item.prototype.DefaultSalesUoMEntry = new Number();
SAPB1.Item.prototype.DefaultPurchasingUoMEntry = new Number();
SAPB1.Item.prototype.DepreciationGroup = new String();
SAPB1.Item.prototype.AssetSerialNumber = new String();
SAPB1.Item.prototype.InventoryWeight = new Number();
SAPB1.Item.prototype.InventoryWeightUnit = new Number();
SAPB1.Item.prototype.InventoryWeight1 = new Number();
SAPB1.Item.prototype.InventoryWeightUnit1 = new Number();
SAPB1.Item.prototype.DefaultCountingUnit = new String();
SAPB1.Item.prototype.CountingItemsPerUnit = new Number();
SAPB1.Item.prototype.DefaultCountingUoMEntry = new Number();
SAPB1.Item.prototype.Excisable = new String();
SAPB1.Item.prototype.ChapterID = new Number();
SAPB1.Item.prototype.ScsCode = new String();
SAPB1.Item.prototype.SpProdType = new String();
SAPB1.Item.prototype.ProdStdCost = new Number();
SAPB1.Item.prototype.InCostRollup = new String();
SAPB1.Item.prototype.VirtualAssetItem = new String();
SAPB1.Item.prototype.EnforceAssetSerialNumbers = new String();
SAPB1.Item.prototype.AttachmentEntry = new Number();
SAPB1.Item.prototype.LinkedResource = new String();
SAPB1.Item.prototype.UpdateDate = new String();
SAPB1.Item.prototype.UpdateTime = new String();
SAPB1.Item.prototype.GSTRelevnt = new String();
SAPB1.Item.prototype.SACEntry = new Number();
SAPB1.Item.prototype.GSTTaxCategory = new String();
SAPB1.Item.prototype.ServiceCategoryEntry = new Number();
SAPB1.Item.prototype.CapitalGoodsOnHoldPercent = new Number();
SAPB1.Item.prototype.CapitalGoodsOnHoldLimit = new Number();
SAPB1.Item.prototype.AssessableValue = new Number();
SAPB1.Item.prototype.AssVal4WTR = new Number();
SAPB1.Item.prototype.SOIExcisable = new String();
SAPB1.Item.prototype.TNVED = new String();
SAPB1.Item.prototype.ImportedItem = new String();
SAPB1.Item.prototype.PricingUnit = new Number();
SAPB1.Item.prototype.CreateDate = new String();
SAPB1.Item.prototype.CreateTime = new String();
SAPB1.Item.prototype.U_Class2 = new String();
SAPB1.Item.prototype.ItemPrices = new ItemPriceCollection();
SAPB1.Item.prototype.ItemWarehouseInfoCollection = new ItemWarehouseInfoCollection();
SAPB1.Item.prototype.ItemPreferredVendors = new ItemPreferredVendorCollection();
SAPB1.Item.prototype.ItemLocalizationInfos = new ItemLocalizationInfoCollection();
SAPB1.Item.prototype.ItemProjects = new ItemProjectCollection();
SAPB1.Item.prototype.ItemDistributionRules = new ItemDistributionRuleCollection();
SAPB1.Item.prototype.ItemAttributeGroups = new ItemAttributeGroupsCollection();
SAPB1.Item.prototype.ItemDepreciationParameters = new ItemDepreciationParameterCollection();
SAPB1.Item.prototype.ItemPeriodControls = new ItemPeriodControlCollection();
SAPB1.Item.prototype.ItemUnitOfMeasurementCollection = new ItemUnitOfMeasurementCollection();
SAPB1.Item.prototype.ItemBarCodeCollection = new ItemBarCodeCollection();
SAPB1.Item.prototype.ItemIntrastatExtension = new ItemIntrastatExtension();

SAPB1.Item.ItemPrice = ItemPrice
SAPB1.Item.ItemPriceCollection = ItemPriceCollection
SAPB1.Item.ItemWarehouseInfo = ItemWarehouseInfo
SAPB1.Item.ItemWarehouseInfoCollection = ItemWarehouseInfoCollection
SAPB1.Item.ItemPreferredVendor = ItemPreferredVendor
SAPB1.Item.ItemPreferredVendorCollection = ItemPreferredVendorCollection
SAPB1.Item.ItemLocalizationInfo = ItemLocalizationInfo
SAPB1.Item.ItemLocalizationInfoCollection = ItemLocalizationInfoCollection
SAPB1.Item.ItemProject = ItemProject
SAPB1.Item.ItemProjectCollection = ItemProjectCollection
SAPB1.Item.ItemDistributionRule = ItemDistributionRule
SAPB1.Item.ItemDistributionRuleCollection = ItemDistributionRuleCollection
SAPB1.Item.ItemAttributeGroups = ItemAttributeGroups
SAPB1.Item.ItemAttributeGroupsCollection = ItemAttributeGroupsCollection
SAPB1.Item.ItemDepreciationParameter = ItemDepreciationParameter
SAPB1.Item.ItemDepreciationParameterCollection = ItemDepreciationParameterCollection
SAPB1.Item.ItemPeriodControl = ItemPeriodControl
SAPB1.Item.ItemPeriodControlCollection = ItemPeriodControlCollection
SAPB1.Item.ItemUnitOfMeasurement = ItemUnitOfMeasurement
SAPB1.Item.ItemUnitOfMeasurementCollection = ItemUnitOfMeasurementCollection
SAPB1.Item.ItemBarCode = ItemBarCode
SAPB1.Item.ItemBarCodeCollection = ItemBarCodeCollection
SAPB1.Item.ItemIntrastatExtension = ItemIntrastatExtension

SAPB1.Item.BoYesNoEnum = BoYesNoEnum
SAPB1.Item.BoItemTreeTypes = BoItemTreeTypes
SAPB1.Item.BoGLMethods = BoGLMethods
SAPB1.Item.BoTaxTypes = BoTaxTypes
SAPB1.Item.BoInventorySystem = BoInventorySystem
SAPB1.Item.BoIssueMethod = BoIssueMethod
SAPB1.Item.BoManageMethod = BoManageMethod
SAPB1.Item.BoPlanningSystem = BoPlanningSystem
SAPB1.Item.BoProcurementMethod = BoProcurementMethod
SAPB1.Item.BoMRPComponentWarehouse = BoMRPComponentWarehouse
SAPB1.Item.ItemTypeEnum = ItemTypeEnum
SAPB1.Item.ItemClassEnum = ItemClassEnum
SAPB1.Item.BoMaterialTypes = BoMaterialTypes
SAPB1.Item.TypeOfAdvancedRulesEnum = TypeOfAdvancedRulesEnum
SAPB1.Item.IssuePrimarilyByEnum = IssuePrimarilyByEnum
SAPB1.Item.AssetStatusEnum = AssetStatusEnum
SAPB1.Item.SpecialProductTypeEnum = SpecialProductTypeEnum
SAPB1.Item.GSTTaxCategoryEnum = GSTTaxCategoryEnum
SAPB1.Item.SOIExcisableTypeEnum = SOIExcisableTypeEnum

SAPB1.Item.create = function (rawObject) {
    var instance = new SAPB1.Item();
    for (var prop in rawObject) {
        if (rawObject.hasOwnProperty(prop)) {
            if (SAPB1.Item.prototype.hasOwnProperty(prop)) {
                if (instance[prop] instanceof SAPB1.Collection) {
                    var collectionInstance = instance[prop].constructor.create(rawObject[prop]);
                    instance[prop] = collectionInstance;
                } else if (instance[prop] instanceof SAPB1.ComplexType) {
                    var complexInstance = instance[prop].constructor.create(rawObject[prop]);
                    instance[prop] = complexInstance;
                }
                else {
                    instance[prop] = rawObject[prop];
                }
            }
        }
    }
    return instance;
}


module.exports = SAPB1.Item;
